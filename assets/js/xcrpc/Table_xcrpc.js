// **********************************************************************
// *** DO NOT EDIT!  This file was autogenerated by xcrpc             ***
// **********************************************************************
// Copyright 2018 Xcalar, Inc. All rights reserved.
//
// No use, or distribution, of this source code is permitted in any form or
// means without a valid, written license agreement with Xcalar, Inc.
// Please refer to the included "COPYING" file for terms and conditions
// regarding the use and redistribution of this software.
//

var client = require("./Client");
var service = require('./xcalar/compute/localtypes/Service_pb');

var proto_empty = require("google-protobuf/google/protobuf/empty_pb");
var table = require("./xcalar/compute/localtypes/Table_pb");


////////////////////////////////////////////////////////////////////////////////
// Constructors
////////////////////////////////////////////////////////////////////////////////

function TableService(client) {
    this.client = client;
}

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

TableService.prototype = {
    addIndex: async function(indexRequest) {
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(indexRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Table.IndexRequest");
        //anyWrapper.pack(indexRequest.serializeBinary(), "IndexRequest");

        var responseData = await this.client.execute("Table", "AddIndex", anyWrapper);
        var specificBytes = responseData.getValue();
        // XXX Any.unpack() is only available in protobuf 3.2; see above
        //var empty =
        //    responseData.unpack(proto_empty.Empty.deserializeBinary,
        //                        "Empty");
        var empty = proto_empty.Empty.deserializeBinary(specificBytes);
        return empty;
    },
    removeIndex: async function(indexRequest) {
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(indexRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Table.IndexRequest");
        //anyWrapper.pack(indexRequest.serializeBinary(), "IndexRequest");

        var responseData = await this.client.execute("Table", "RemoveIndex", anyWrapper);
        var specificBytes = responseData.getValue();
        // XXX Any.unpack() is only available in protobuf 3.2; see above
        //var empty =
        //    responseData.unpack(proto_empty.Empty.deserializeBinary,
        //                        "Empty");
        var empty = proto_empty.Empty.deserializeBinary(specificBytes);
        return empty;
    },
    publishTable: async function(publishRequest) {
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(publishRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Table.PublishRequest");
        //anyWrapper.pack(publishRequest.serializeBinary(), "PublishRequest");

        var responseData = await this.client.execute("Table", "PublishTable", anyWrapper);
        var specificBytes = responseData.getValue();
        // XXX Any.unpack() is only available in protobuf 3.2; see above
        //var publishResponse =
        //    responseData.unpack(table.PublishResponse.deserializeBinary,
        //                        "PublishResponse");
        var publishResponse = table.PublishResponse.deserializeBinary(specificBytes);
        return publishResponse;
    },
    unpublishTable: async function(unpublishRequest) {
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(unpublishRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Table.UnpublishRequest");
        //anyWrapper.pack(unpublishRequest.serializeBinary(), "UnpublishRequest");

        var responseData = await this.client.execute("Table", "UnpublishTable", anyWrapper);
        var specificBytes = responseData.getValue();
        // XXX Any.unpack() is only available in protobuf 3.2; see above
        //var empty =
        //    responseData.unpack(proto_empty.Empty.deserializeBinary,
        //                        "Empty");
        var empty = proto_empty.Empty.deserializeBinary(specificBytes);
        return empty;
    },
    listTables: async function(listTablesRequest) {
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(listTablesRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Table.ListTablesRequest");
        //anyWrapper.pack(listTablesRequest.serializeBinary(), "ListTablesRequest");

        var responseData = await this.client.execute("Table", "ListTables", anyWrapper);
        var specificBytes = responseData.getValue();
        // XXX Any.unpack() is only available in protobuf 3.2; see above
        //var listTablesResponse =
        //    responseData.unpack(table.ListTablesResponse.deserializeBinary,
        //                        "ListTablesResponse");
        var listTablesResponse = table.ListTablesResponse.deserializeBinary(specificBytes);
        return listTablesResponse;
    },
    tableMeta: async function(tableMetaRequest) {
        // XXX we want to use Any.pack() here, but it is only available
        // in protobuf 3.2
        // https://github.com/google/protobuf/issues/2612#issuecomment-274567411
        var anyWrapper = new proto.google.protobuf.Any();
        anyWrapper.setValue(tableMetaRequest.serializeBinary());
        anyWrapper.setTypeUrl("type.googleapis.com/xcalar.compute.localtypes.Table.TableMetaRequest");
        //anyWrapper.pack(tableMetaRequest.serializeBinary(), "TableMetaRequest");

        var responseData = await this.client.execute("Table", "TableMeta", anyWrapper);
        var specificBytes = responseData.getValue();
        // XXX Any.unpack() is only available in protobuf 3.2; see above
        //var tableMetaResponse =
        //    responseData.unpack(table.TableMetaResponse.deserializeBinary,
        //                        "TableMetaResponse");
        var tableMetaResponse = table.TableMetaResponse.deserializeBinary(specificBytes);
        return tableMetaResponse;
    },
};

exports.TableService = TableService;
