// source: xcalar/compute/localtypes/ProtoMsg.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var xcalar_compute_localtypes_ParentChild_pb = require('../../../xcalar/compute/localtypes/ParentChild_pb.js');
goog.object.extend(proto, xcalar_compute_localtypes_ParentChild_pb);
var xcalar_compute_localtypes_Service_pb = require('../../../xcalar/compute/localtypes/Service_pb.js');
goog.object.extend(proto, xcalar_compute_localtypes_Service_pb);
goog.exportSymbol('proto.ProtoApiFunc', null, global);
goog.exportSymbol('proto.ProtoApiRequest', null, global);
goog.exportSymbol('proto.ProtoApiRequest.PayloadCase', null, global);
goog.exportSymbol('proto.ProtoApiResponse', null, global);
goog.exportSymbol('proto.ProtoApiResponse.PayloadCase', null, global);
goog.exportSymbol('proto.ProtoMsg', null, global);
goog.exportSymbol('proto.ProtoMsg.PayloadCase', null, global);
goog.exportSymbol('proto.ProtoMsgTarget', null, global);
goog.exportSymbol('proto.ProtoMsgType', null, global);
goog.exportSymbol('proto.ProtoRequestMsg', null, global);
goog.exportSymbol('proto.ProtoRequestMsg.PayloadCase', null, global);
goog.exportSymbol('proto.ProtoResponseMsg', null, global);
goog.exportSymbol('proto.ProtoResponseMsg.PayloadCase', null, global);
goog.exportSymbol('proto.ProtoTestRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoApiRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ProtoApiRequest.oneofGroups_);
};
goog.inherits(proto.ProtoApiRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoApiRequest.displayName = 'proto.ProtoApiRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoTestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoTestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoTestRequest.displayName = 'proto.ProtoTestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoApiResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ProtoApiResponse.oneofGroups_);
};
goog.inherits(proto.ProtoApiResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoApiResponse.displayName = 'proto.ProtoApiResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoRequestMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ProtoRequestMsg.oneofGroups_);
};
goog.inherits(proto.ProtoRequestMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoRequestMsg.displayName = 'proto.ProtoRequestMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoResponseMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ProtoResponseMsg.oneofGroups_);
};
goog.inherits(proto.ProtoResponseMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoResponseMsg.displayName = 'proto.ProtoResponseMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ProtoMsg.oneofGroups_);
};
goog.inherits(proto.ProtoMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoMsg.displayName = 'proto.ProtoMsg';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ProtoApiRequest.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.ProtoApiRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  NAME: 2,
  ID: 3,
  ADDR: 4
};

/**
 * @return {proto.ProtoApiRequest.PayloadCase}
 */
proto.ProtoApiRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.ProtoApiRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ProtoApiRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoApiRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoApiRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoApiRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoApiRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    func: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, 0),
    addr: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoApiRequest}
 */
proto.ProtoApiRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoApiRequest;
  return proto.ProtoApiRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoApiRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoApiRequest}
 */
proto.ProtoApiRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ProtoApiFunc} */ (reader.readEnum());
      msg.setFunc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoApiRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoApiRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoApiRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoApiRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFunc();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional ProtoApiFunc func = 1;
 * @return {!proto.ProtoApiFunc}
 */
proto.ProtoApiRequest.prototype.getFunc = function() {
  return /** @type {!proto.ProtoApiFunc} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ProtoApiFunc} value
 * @return {!proto.ProtoApiRequest} returns this
 */
proto.ProtoApiRequest.prototype.setFunc = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ProtoApiRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoApiRequest} returns this
 */
proto.ProtoApiRequest.prototype.setName = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.ProtoApiRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoApiRequest} returns this
 */
proto.ProtoApiRequest.prototype.clearName = function() {
  return jspb.Message.setOneofField(this, 2, proto.ProtoApiRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoApiRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 id = 3;
 * @return {number}
 */
proto.ProtoApiRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoApiRequest} returns this
 */
proto.ProtoApiRequest.prototype.setId = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.ProtoApiRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoApiRequest} returns this
 */
proto.ProtoApiRequest.prototype.clearId = function() {
  return jspb.Message.setOneofField(this, 3, proto.ProtoApiRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoApiRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 addr = 4;
 * @return {number}
 */
proto.ProtoApiRequest.prototype.getAddr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoApiRequest} returns this
 */
proto.ProtoApiRequest.prototype.setAddr = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.ProtoApiRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoApiRequest} returns this
 */
proto.ProtoApiRequest.prototype.clearAddr = function() {
  return jspb.Message.setOneofField(this, 4, proto.ProtoApiRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoApiRequest.prototype.hasAddr = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoTestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoTestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoTestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoTestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    testint: jspb.Message.getFieldWithDefault(msg, 1, 0),
    teststring: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoTestRequest}
 */
proto.ProtoTestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoTestRequest;
  return proto.ProtoTestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoTestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoTestRequest}
 */
proto.ProtoTestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTestint(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeststring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoTestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoTestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoTestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoTestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTestint();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTeststring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 testInt = 1;
 * @return {number}
 */
proto.ProtoTestRequest.prototype.getTestint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoTestRequest} returns this
 */
proto.ProtoTestRequest.prototype.setTestint = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string testString = 2;
 * @return {string}
 */
proto.ProtoTestRequest.prototype.getTeststring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoTestRequest} returns this
 */
proto.ProtoTestRequest.prototype.setTeststring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ProtoApiResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.ProtoApiResponse.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  VERSION: 1,
  ADDR: 2
};

/**
 * @return {proto.ProtoApiResponse.PayloadCase}
 */
proto.ProtoApiResponse.prototype.getPayloadCase = function() {
  return /** @type {proto.ProtoApiResponse.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ProtoApiResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoApiResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoApiResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoApiResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoApiResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    addr: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoApiResponse}
 */
proto.ProtoApiResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoApiResponse;
  return proto.ProtoApiResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoApiResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoApiResponse}
 */
proto.ProtoApiResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoApiResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoApiResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoApiResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoApiResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.ProtoApiResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoApiResponse} returns this
 */
proto.ProtoApiResponse.prototype.setVersion = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.ProtoApiResponse.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoApiResponse} returns this
 */
proto.ProtoApiResponse.prototype.clearVersion = function() {
  return jspb.Message.setOneofField(this, 1, proto.ProtoApiResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoApiResponse.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 addr = 2;
 * @return {number}
 */
proto.ProtoApiResponse.prototype.getAddr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoApiResponse} returns this
 */
proto.ProtoApiResponse.prototype.setAddr = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.ProtoApiResponse.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoApiResponse} returns this
 */
proto.ProtoApiResponse.prototype.clearAddr = function() {
  return jspb.Message.setOneofField(this, 2, proto.ProtoApiResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoApiResponse.prototype.hasAddr = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ProtoRequestMsg.oneofGroups_ = [[4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.ProtoRequestMsg.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  API: 4,
  PARENT: 5,
  CHILD: 6,
  TEST: 7,
  SERVIC: 8
};

/**
 * @return {proto.ProtoRequestMsg.PayloadCase}
 */
proto.ProtoRequestMsg.prototype.getPayloadCase = function() {
  return /** @type {proto.ProtoRequestMsg.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ProtoRequestMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoRequestMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoRequestMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoRequestMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoRequestMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    target: jspb.Message.getFieldWithDefault(msg, 2, 0),
    childid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    api: (f = msg.getApi()) && proto.ProtoApiRequest.toObject(includeInstance, f),
    parent: (f = msg.getParent()) && xcalar_compute_localtypes_ParentChild_pb.ProtoParentRequest.toObject(includeInstance, f),
    child: (f = msg.getChild()) && xcalar_compute_localtypes_ParentChild_pb.ProtoChildRequest.toObject(includeInstance, f),
    test: (f = msg.getTest()) && proto.ProtoTestRequest.toObject(includeInstance, f),
    servic: (f = msg.getServic()) && xcalar_compute_localtypes_Service_pb.ServiceRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoRequestMsg}
 */
proto.ProtoRequestMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoRequestMsg;
  return proto.ProtoRequestMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoRequestMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoRequestMsg}
 */
proto.ProtoRequestMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.ProtoMsgTarget} */ (reader.readEnum());
      msg.setTarget(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChildid(value);
      break;
    case 4:
      var value = new proto.ProtoApiRequest;
      reader.readMessage(value,proto.ProtoApiRequest.deserializeBinaryFromReader);
      msg.setApi(value);
      break;
    case 5:
      var value = new xcalar_compute_localtypes_ParentChild_pb.ProtoParentRequest;
      reader.readMessage(value,xcalar_compute_localtypes_ParentChild_pb.ProtoParentRequest.deserializeBinaryFromReader);
      msg.setParent(value);
      break;
    case 6:
      var value = new xcalar_compute_localtypes_ParentChild_pb.ProtoChildRequest;
      reader.readMessage(value,xcalar_compute_localtypes_ParentChild_pb.ProtoChildRequest.deserializeBinaryFromReader);
      msg.setChild(value);
      break;
    case 7:
      var value = new proto.ProtoTestRequest;
      reader.readMessage(value,proto.ProtoTestRequest.deserializeBinaryFromReader);
      msg.setTest(value);
      break;
    case 8:
      var value = new xcalar_compute_localtypes_Service_pb.ServiceRequest;
      reader.readMessage(value,xcalar_compute_localtypes_Service_pb.ServiceRequest.deserializeBinaryFromReader);
      msg.setServic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoRequestMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoRequestMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoRequestMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoRequestMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTarget();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getChildid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getApi();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ProtoApiRequest.serializeBinaryToWriter
    );
  }
  f = message.getParent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      xcalar_compute_localtypes_ParentChild_pb.ProtoParentRequest.serializeBinaryToWriter
    );
  }
  f = message.getChild();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      xcalar_compute_localtypes_ParentChild_pb.ProtoChildRequest.serializeBinaryToWriter
    );
  }
  f = message.getTest();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ProtoTestRequest.serializeBinaryToWriter
    );
  }
  f = message.getServic();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      xcalar_compute_localtypes_Service_pb.ServiceRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 requestId = 1;
 * @return {number}
 */
proto.ProtoRequestMsg.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoRequestMsg} returns this
 */
proto.ProtoRequestMsg.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ProtoMsgTarget target = 2;
 * @return {!proto.ProtoMsgTarget}
 */
proto.ProtoRequestMsg.prototype.getTarget = function() {
  return /** @type {!proto.ProtoMsgTarget} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ProtoMsgTarget} value
 * @return {!proto.ProtoRequestMsg} returns this
 */
proto.ProtoRequestMsg.prototype.setTarget = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 childId = 3;
 * @return {number}
 */
proto.ProtoRequestMsg.prototype.getChildid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoRequestMsg} returns this
 */
proto.ProtoRequestMsg.prototype.setChildid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional ProtoApiRequest api = 4;
 * @return {?proto.ProtoApiRequest}
 */
proto.ProtoRequestMsg.prototype.getApi = function() {
  return /** @type{?proto.ProtoApiRequest} */ (
    jspb.Message.getWrapperField(this, proto.ProtoApiRequest, 4));
};


/**
 * @param {?proto.ProtoApiRequest|undefined} value
 * @return {!proto.ProtoRequestMsg} returns this
*/
proto.ProtoRequestMsg.prototype.setApi = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.ProtoRequestMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoRequestMsg} returns this
 */
proto.ProtoRequestMsg.prototype.clearApi = function() {
  return this.setApi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoRequestMsg.prototype.hasApi = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProtoParentRequest parent = 5;
 * @return {?proto.ProtoParentRequest}
 */
proto.ProtoRequestMsg.prototype.getParent = function() {
  return /** @type{?proto.ProtoParentRequest} */ (
    jspb.Message.getWrapperField(this, xcalar_compute_localtypes_ParentChild_pb.ProtoParentRequest, 5));
};


/**
 * @param {?proto.ProtoParentRequest|undefined} value
 * @return {!proto.ProtoRequestMsg} returns this
*/
proto.ProtoRequestMsg.prototype.setParent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.ProtoRequestMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoRequestMsg} returns this
 */
proto.ProtoRequestMsg.prototype.clearParent = function() {
  return this.setParent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoRequestMsg.prototype.hasParent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ProtoChildRequest child = 6;
 * @return {?proto.ProtoChildRequest}
 */
proto.ProtoRequestMsg.prototype.getChild = function() {
  return /** @type{?proto.ProtoChildRequest} */ (
    jspb.Message.getWrapperField(this, xcalar_compute_localtypes_ParentChild_pb.ProtoChildRequest, 6));
};


/**
 * @param {?proto.ProtoChildRequest|undefined} value
 * @return {!proto.ProtoRequestMsg} returns this
*/
proto.ProtoRequestMsg.prototype.setChild = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.ProtoRequestMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoRequestMsg} returns this
 */
proto.ProtoRequestMsg.prototype.clearChild = function() {
  return this.setChild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoRequestMsg.prototype.hasChild = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ProtoTestRequest test = 7;
 * @return {?proto.ProtoTestRequest}
 */
proto.ProtoRequestMsg.prototype.getTest = function() {
  return /** @type{?proto.ProtoTestRequest} */ (
    jspb.Message.getWrapperField(this, proto.ProtoTestRequest, 7));
};


/**
 * @param {?proto.ProtoTestRequest|undefined} value
 * @return {!proto.ProtoRequestMsg} returns this
*/
proto.ProtoRequestMsg.prototype.setTest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.ProtoRequestMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoRequestMsg} returns this
 */
proto.ProtoRequestMsg.prototype.clearTest = function() {
  return this.setTest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoRequestMsg.prototype.hasTest = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ServiceRequest servic = 8;
 * @return {?proto.ServiceRequest}
 */
proto.ProtoRequestMsg.prototype.getServic = function() {
  return /** @type{?proto.ServiceRequest} */ (
    jspb.Message.getWrapperField(this, xcalar_compute_localtypes_Service_pb.ServiceRequest, 8));
};


/**
 * @param {?proto.ServiceRequest|undefined} value
 * @return {!proto.ProtoRequestMsg} returns this
*/
proto.ProtoRequestMsg.prototype.setServic = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.ProtoRequestMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoRequestMsg} returns this
 */
proto.ProtoRequestMsg.prototype.clearServic = function() {
  return this.setServic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoRequestMsg.prototype.hasServic = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ProtoResponseMsg.oneofGroups_ = [[4,5,6]];

/**
 * @enum {number}
 */
proto.ProtoResponseMsg.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  API: 4,
  PARENTCHILD: 5,
  SERVIC: 6
};

/**
 * @return {proto.ProtoResponseMsg.PayloadCase}
 */
proto.ProtoResponseMsg.prototype.getPayloadCase = function() {
  return /** @type {proto.ProtoResponseMsg.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ProtoResponseMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoResponseMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoResponseMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoResponseMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoResponseMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    error: jspb.Message.getFieldWithDefault(msg, 3, ""),
    api: (f = msg.getApi()) && proto.ProtoApiResponse.toObject(includeInstance, f),
    parentchild: (f = msg.getParentchild()) && xcalar_compute_localtypes_ParentChild_pb.ProtoParentChildResponse.toObject(includeInstance, f),
    servic: (f = msg.getServic()) && xcalar_compute_localtypes_Service_pb.ServiceResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoResponseMsg}
 */
proto.ProtoResponseMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoResponseMsg;
  return proto.ProtoResponseMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoResponseMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoResponseMsg}
 */
proto.ProtoResponseMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 4:
      var value = new proto.ProtoApiResponse;
      reader.readMessage(value,proto.ProtoApiResponse.deserializeBinaryFromReader);
      msg.setApi(value);
      break;
    case 5:
      var value = new xcalar_compute_localtypes_ParentChild_pb.ProtoParentChildResponse;
      reader.readMessage(value,xcalar_compute_localtypes_ParentChild_pb.ProtoParentChildResponse.deserializeBinaryFromReader);
      msg.setParentchild(value);
      break;
    case 6:
      var value = new xcalar_compute_localtypes_Service_pb.ServiceResponse;
      reader.readMessage(value,xcalar_compute_localtypes_Service_pb.ServiceResponse.deserializeBinaryFromReader);
      msg.setServic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoResponseMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoResponseMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoResponseMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoResponseMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getApi();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ProtoApiResponse.serializeBinaryToWriter
    );
  }
  f = message.getParentchild();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      xcalar_compute_localtypes_ParentChild_pb.ProtoParentChildResponse.serializeBinaryToWriter
    );
  }
  f = message.getServic();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      xcalar_compute_localtypes_Service_pb.ServiceResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 requestId = 1;
 * @return {number}
 */
proto.ProtoResponseMsg.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoResponseMsg} returns this
 */
proto.ProtoResponseMsg.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 status = 2;
 * @return {number}
 */
proto.ProtoResponseMsg.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoResponseMsg} returns this
 */
proto.ProtoResponseMsg.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string error = 3;
 * @return {string}
 */
proto.ProtoResponseMsg.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoResponseMsg} returns this
 */
proto.ProtoResponseMsg.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ProtoApiResponse api = 4;
 * @return {?proto.ProtoApiResponse}
 */
proto.ProtoResponseMsg.prototype.getApi = function() {
  return /** @type{?proto.ProtoApiResponse} */ (
    jspb.Message.getWrapperField(this, proto.ProtoApiResponse, 4));
};


/**
 * @param {?proto.ProtoApiResponse|undefined} value
 * @return {!proto.ProtoResponseMsg} returns this
*/
proto.ProtoResponseMsg.prototype.setApi = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.ProtoResponseMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoResponseMsg} returns this
 */
proto.ProtoResponseMsg.prototype.clearApi = function() {
  return this.setApi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoResponseMsg.prototype.hasApi = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProtoParentChildResponse parentChild = 5;
 * @return {?proto.ProtoParentChildResponse}
 */
proto.ProtoResponseMsg.prototype.getParentchild = function() {
  return /** @type{?proto.ProtoParentChildResponse} */ (
    jspb.Message.getWrapperField(this, xcalar_compute_localtypes_ParentChild_pb.ProtoParentChildResponse, 5));
};


/**
 * @param {?proto.ProtoParentChildResponse|undefined} value
 * @return {!proto.ProtoResponseMsg} returns this
*/
proto.ProtoResponseMsg.prototype.setParentchild = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.ProtoResponseMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoResponseMsg} returns this
 */
proto.ProtoResponseMsg.prototype.clearParentchild = function() {
  return this.setParentchild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoResponseMsg.prototype.hasParentchild = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ServiceResponse servic = 6;
 * @return {?proto.ServiceResponse}
 */
proto.ProtoResponseMsg.prototype.getServic = function() {
  return /** @type{?proto.ServiceResponse} */ (
    jspb.Message.getWrapperField(this, xcalar_compute_localtypes_Service_pb.ServiceResponse, 6));
};


/**
 * @param {?proto.ServiceResponse|undefined} value
 * @return {!proto.ProtoResponseMsg} returns this
*/
proto.ProtoResponseMsg.prototype.setServic = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.ProtoResponseMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoResponseMsg} returns this
 */
proto.ProtoResponseMsg.prototype.clearServic = function() {
  return this.setServic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoResponseMsg.prototype.hasServic = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ProtoMsg.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.ProtoMsg.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  REQUEST: 2,
  RESPONSE: 3
};

/**
 * @return {proto.ProtoMsg.PayloadCase}
 */
proto.ProtoMsg.prototype.getPayloadCase = function() {
  return /** @type {proto.ProtoMsg.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ProtoMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    request: (f = msg.getRequest()) && proto.ProtoRequestMsg.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && proto.ProtoResponseMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoMsg}
 */
proto.ProtoMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoMsg;
  return proto.ProtoMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoMsg}
 */
proto.ProtoMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ProtoMsgType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.ProtoRequestMsg;
      reader.readMessage(value,proto.ProtoRequestMsg.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new proto.ProtoResponseMsg;
      reader.readMessage(value,proto.ProtoResponseMsg.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ProtoRequestMsg.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ProtoResponseMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoMsgType type = 1;
 * @return {!proto.ProtoMsgType}
 */
proto.ProtoMsg.prototype.getType = function() {
  return /** @type {!proto.ProtoMsgType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ProtoMsgType} value
 * @return {!proto.ProtoMsg} returns this
 */
proto.ProtoMsg.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ProtoRequestMsg request = 2;
 * @return {?proto.ProtoRequestMsg}
 */
proto.ProtoMsg.prototype.getRequest = function() {
  return /** @type{?proto.ProtoRequestMsg} */ (
    jspb.Message.getWrapperField(this, proto.ProtoRequestMsg, 2));
};


/**
 * @param {?proto.ProtoRequestMsg|undefined} value
 * @return {!proto.ProtoMsg} returns this
*/
proto.ProtoMsg.prototype.setRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ProtoMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoMsg} returns this
 */
proto.ProtoMsg.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoMsg.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ProtoResponseMsg response = 3;
 * @return {?proto.ProtoResponseMsg}
 */
proto.ProtoMsg.prototype.getResponse = function() {
  return /** @type{?proto.ProtoResponseMsg} */ (
    jspb.Message.getWrapperField(this, proto.ProtoResponseMsg, 3));
};


/**
 * @param {?proto.ProtoResponseMsg|undefined} value
 * @return {!proto.ProtoMsg} returns this
*/
proto.ProtoMsg.prototype.setResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.ProtoMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoMsg} returns this
 */
proto.ProtoMsg.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoMsg.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.ProtoApiFunc = {
  APIFUNCINVALID: 0,
  APIFUNCGETVERSION: 1,
  APIFUNCGETBUFCACHEADDR: 2,
  APIFUNCGETXDBID: 3
};

/**
 * @enum {number}
 */
proto.ProtoMsgTarget = {
  PROTOMSGTARGETINVALID: 0,
  PROTOMSGTARGETPARENT: 1,
  PROTOMSGTARGETCHILD: 2,
  PROTOMSGTARGETAPI: 3,
  PROTOMSGTARGETSERVICE: 4,
  PROTOMSGTARGETTEST: 5
};

/**
 * @enum {number}
 */
proto.ProtoMsgType = {
  PROTOMSGTYPEINVALID: 0,
  PROTOMSGTYPEREQUEST: 1,
  PROTOMSGTYPERESPONSE: 2
};

goog.object.extend(exports, proto);
