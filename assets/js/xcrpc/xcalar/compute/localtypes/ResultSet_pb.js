// source: xcalar/compute/localtypes/ResultSet.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var xcalar_compute_localtypes_Workbook_pb = require('../../../xcalar/compute/localtypes/Workbook_pb.js');
goog.object.extend(proto, xcalar_compute_localtypes_Workbook_pb);
var xcalar_compute_localtypes_ProtoFieldValue_pb = require('../../../xcalar/compute/localtypes/ProtoFieldValue_pb.js');
goog.object.extend(proto, xcalar_compute_localtypes_ProtoFieldValue_pb);
goog.exportSymbol('proto.xcalar.compute.localtypes.ResultSet.MakeType', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.displayName = 'proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.displayName = 'proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.displayName = 'proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.displayName = 'proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.repeatedFields_, null);
};
goog.inherits(proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.displayName = 'proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.repeatedFields_, null);
};
goog.inherits(proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.displayName = 'proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.displayName = 'proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scope: (f = msg.getScope()) && xcalar_compute_localtypes_Workbook_pb.WorkbookScope.toObject(includeInstance, f),
    errorDataset: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest;
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new xcalar_compute_localtypes_Workbook_pb.WorkbookScope;
      reader.readMessage(value,xcalar_compute_localtypes_Workbook_pb.WorkbookScope.deserializeBinaryFromReader);
      msg.setScope(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setErrorDataset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScope();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      xcalar_compute_localtypes_Workbook_pb.WorkbookScope.serializeBinaryToWriter
    );
  }
  f = message.getErrorDataset();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional xcalar.compute.localtypes.Workbook.WorkbookScope scope = 2;
 * @return {?proto.xcalar.compute.localtypes.Workbook.WorkbookScope}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.prototype.getScope = function() {
  return /** @type{?proto.xcalar.compute.localtypes.Workbook.WorkbookScope} */ (
    jspb.Message.getWrapperField(this, xcalar_compute_localtypes_Workbook_pb.WorkbookScope, 2));
};


/**
 * @param {?proto.xcalar.compute.localtypes.Workbook.WorkbookScope|undefined} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest} returns this
*/
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.prototype.setScope = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.prototype.clearScope = function() {
  return this.setScope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.prototype.hasScope = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool error_dataset = 3;
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.prototype.getErrorDataset = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeRequest.prototype.setErrorDataset = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultSetId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numRows: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse;
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setResultSetId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultSetId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getNumRows();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional fixed64 result_set_id = 1;
 * @return {number}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.prototype.getResultSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.prototype.setResultSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 num_rows = 2;
 * @return {number}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.prototype.getNumRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetMakeResponse.prototype.setNumRows = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultSetId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    scope: (f = msg.getScope()) && xcalar_compute_localtypes_Workbook_pb.WorkbookScope.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest;
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setResultSetId(value);
      break;
    case 2:
      var value = new xcalar_compute_localtypes_Workbook_pb.WorkbookScope;
      reader.readMessage(value,xcalar_compute_localtypes_Workbook_pb.WorkbookScope.deserializeBinaryFromReader);
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultSetId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getScope();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      xcalar_compute_localtypes_Workbook_pb.WorkbookScope.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed64 result_set_id = 1;
 * @return {number}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.prototype.getResultSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.prototype.setResultSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional xcalar.compute.localtypes.Workbook.WorkbookScope scope = 2;
 * @return {?proto.xcalar.compute.localtypes.Workbook.WorkbookScope}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.prototype.getScope = function() {
  return /** @type{?proto.xcalar.compute.localtypes.Workbook.WorkbookScope} */ (
    jspb.Message.getWrapperField(this, xcalar_compute_localtypes_Workbook_pb.WorkbookScope, 2));
};


/**
 * @param {?proto.xcalar.compute.localtypes.Workbook.WorkbookScope|undefined} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest} returns this
*/
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.prototype.setScope = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.prototype.clearScope = function() {
  return this.setScope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetReleaseRequest.prototype.hasScope = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultSetId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numRows: jspb.Message.getFieldWithDefault(msg, 2, 0),
    scope: (f = msg.getScope()) && xcalar_compute_localtypes_Workbook_pb.WorkbookScope.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest;
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setResultSetId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumRows(value);
      break;
    case 3:
      var value = new xcalar_compute_localtypes_Workbook_pb.WorkbookScope;
      reader.readMessage(value,xcalar_compute_localtypes_Workbook_pb.WorkbookScope.deserializeBinaryFromReader);
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultSetId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getNumRows();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getScope();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      xcalar_compute_localtypes_Workbook_pb.WorkbookScope.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed64 result_set_id = 1;
 * @return {number}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.prototype.getResultSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.prototype.setResultSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 num_rows = 2;
 * @return {number}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.prototype.getNumRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.prototype.setNumRows = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional xcalar.compute.localtypes.Workbook.WorkbookScope scope = 3;
 * @return {?proto.xcalar.compute.localtypes.Workbook.WorkbookScope}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.prototype.getScope = function() {
  return /** @type{?proto.xcalar.compute.localtypes.Workbook.WorkbookScope} */ (
    jspb.Message.getWrapperField(this, xcalar_compute_localtypes_Workbook_pb.WorkbookScope, 3));
};


/**
 * @param {?proto.xcalar.compute.localtypes.Workbook.WorkbookScope|undefined} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest} returns this
*/
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.prototype.setScope = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.prototype.clearScope = function() {
  return this.setScope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextRequest.prototype.hasScope = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metasList: jspb.Message.toObjectList(msg.getMetasList(),
    proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.toObject, includeInstance),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse;
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta;
      reader.readMessage(value,proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.deserializeBinaryFromReader);
      msg.addMetas(value);
      break;
    case 2:
      var value = new xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow;
      reader.readMessage(value,xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnNamesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta;
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addColumnNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string column_names = 1;
 * @return {!Array<string>}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.prototype.getColumnNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.prototype.setColumnNamesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.prototype.addColumnNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta.prototype.clearColumnNamesList = function() {
  return this.setColumnNamesList([]);
};


/**
 * repeated RowMeta metas = 1;
 * @return {!Array<!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta>}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.prototype.getMetasList = function() {
  return /** @type{!Array<!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta, 1));
};


/**
 * @param {!Array<!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta>} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse} returns this
*/
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.prototype.setMetasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.prototype.addMetas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.RowMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.prototype.clearMetasList = function() {
  return this.setMetasList([]);
};


/**
 * repeated ProtoRow rows = 2;
 * @return {!Array<!proto.ProtoRow>}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.ProtoRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow, 2));
};


/**
 * @param {!Array<!proto.ProtoRow>} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse} returns this
*/
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ProtoRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ProtoRow}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ProtoRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetNextResponse.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultSetId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rowIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    scope: (f = msg.getScope()) && xcalar_compute_localtypes_Workbook_pb.WorkbookScope.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest;
  return proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setResultSetId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRowIndex(value);
      break;
    case 3:
      var value = new xcalar_compute_localtypes_Workbook_pb.WorkbookScope;
      reader.readMessage(value,xcalar_compute_localtypes_Workbook_pb.WorkbookScope.deserializeBinaryFromReader);
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultSetId();
  if (f !== 0) {
    writer.writeFixed64(
      1,
      f
    );
  }
  f = message.getRowIndex();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getScope();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      xcalar_compute_localtypes_Workbook_pb.WorkbookScope.serializeBinaryToWriter
    );
  }
};


/**
 * optional fixed64 result_set_id = 1;
 * @return {number}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.prototype.getResultSetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.prototype.setResultSetId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 row_index = 2;
 * @return {number}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.prototype.getRowIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.prototype.setRowIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional xcalar.compute.localtypes.Workbook.WorkbookScope scope = 3;
 * @return {?proto.xcalar.compute.localtypes.Workbook.WorkbookScope}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.prototype.getScope = function() {
  return /** @type{?proto.xcalar.compute.localtypes.Workbook.WorkbookScope} */ (
    jspb.Message.getWrapperField(this, xcalar_compute_localtypes_Workbook_pb.WorkbookScope, 3));
};


/**
 * @param {?proto.xcalar.compute.localtypes.Workbook.WorkbookScope|undefined} value
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest} returns this
*/
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.prototype.setScope = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest} returns this
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.prototype.clearScope = function() {
  return this.setScope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.ResultSet.ResultSetSeekRequest.prototype.hasScope = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.xcalar.compute.localtypes.ResultSet.MakeType = {
  TABLE: 0,
  DATASET: 1
};

goog.object.extend(exports, proto.xcalar.compute.localtypes.ResultSet);
