// source: xcalar/compute/localtypes/Stats.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.GetStatsRequest', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.GetStatsResponse', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.LibstatNode', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.ResetStatsRequest', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.ResetStatsResponse', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.StatMeta', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.StatNode', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.StatType', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.StatUnits', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.StatValue', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Stats.StatValue.StatvalueCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Stats.StatValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_);
};
goog.inherits(proto.xcalar.compute.localtypes.Stats.StatValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Stats.StatValue.displayName = 'proto.xcalar.compute.localtypes.Stats.StatValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Stats.StatMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Stats.StatMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Stats.StatMeta.displayName = 'proto.xcalar.compute.localtypes.Stats.StatMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Stats.StatNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcalar.compute.localtypes.Stats.StatNode.repeatedFields_, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Stats.StatNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Stats.StatNode.displayName = 'proto.xcalar.compute.localtypes.Stats.StatNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcalar.compute.localtypes.Stats.GetStatsRequest.repeatedFields_, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Stats.GetStatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Stats.GetStatsRequest.displayName = 'proto.xcalar.compute.localtypes.Stats.GetStatsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.repeatedFields_, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.displayName = 'proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Stats.GetStatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcalar.compute.localtypes.Stats.GetStatsResponse.repeatedFields_, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Stats.GetStatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Stats.GetStatsResponse.displayName = 'proto.xcalar.compute.localtypes.Stats.GetStatsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest.displayName = 'proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Stats.LibstatNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Stats.LibstatNode.displayName = 'proto.xcalar.compute.localtypes.Stats.LibstatNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.repeatedFields_, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.displayName = 'proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Stats.ResetStatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.displayName = 'proto.xcalar.compute.localtypes.Stats.ResetStatsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Stats.ResetStatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Stats.ResetStatsResponse.displayName = 'proto.xcalar.compute.localtypes.Stats.ResetStatsResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.StatvalueCase = {
  STATVALUE_NOT_SET: 0,
  VBOOL: 1,
  VUINT: 2,
  VINT: 3,
  VDOUBLE: 4,
  VSTRING: 5,
  VBYTES: 6
};

/**
 * @return {proto.xcalar.compute.localtypes.Stats.StatValue.StatvalueCase}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.getStatvalueCase = function() {
  return /** @type {proto.xcalar.compute.localtypes.Stats.StatValue.StatvalueCase} */(jspb.Message.computeOneofCase(this, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Stats.StatValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Stats.StatValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.StatValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    vbool: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    vuint: jspb.Message.getFieldWithDefault(msg, 2, 0),
    vint: jspb.Message.getFieldWithDefault(msg, 3, 0),
    vdouble: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    vstring: jspb.Message.getFieldWithDefault(msg, 5, ""),
    vbytes: msg.getVbytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Stats.StatValue;
  return proto.xcalar.compute.localtypes.Stats.StatValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Stats.StatValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVbool(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVuint(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVint(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVdouble(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVstring(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setVbytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Stats.StatValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Stats.StatValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.StatValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional bool vBool = 1;
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.getVbool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.setVbool = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.clearVbool = function() {
  return jspb.Message.setOneofField(this, 1, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.hasVbool = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 vUInt = 2;
 * @return {number}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.getVuint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.setVuint = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.clearVuint = function() {
  return jspb.Message.setOneofField(this, 2, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.hasVuint = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 vInt = 3;
 * @return {number}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.getVint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.setVint = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.clearVint = function() {
  return jspb.Message.setOneofField(this, 3, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.hasVint = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double vDouble = 4;
 * @return {number}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.getVdouble = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.setVdouble = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.clearVdouble = function() {
  return jspb.Message.setOneofField(this, 4, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.hasVdouble = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string vString = 5;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.getVstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.setVstring = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.clearVstring = function() {
  return jspb.Message.setOneofField(this, 5, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.hasVstring = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes vBytes = 6;
 * @return {!(string|Uint8Array)}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.getVbytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes vBytes = 6;
 * This is a type-conversion wrapper around `getVbytes()`
 * @return {string}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.getVbytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getVbytes()));
};


/**
 * optional bytes vBytes = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getVbytes()`
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.getVbytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getVbytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.setVbytes = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.clearVbytes = function() {
  return jspb.Message.setOneofField(this, 6, proto.xcalar.compute.localtypes.Stats.StatValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.StatValue.prototype.hasVbytes = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Stats.StatMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Stats.StatMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    monotonic: (f = msg.getMonotonic()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    units: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxname: (f = msg.getMaxname()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatMeta}
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Stats.StatMeta;
  return proto.xcalar.compute.localtypes.Stats.StatMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Stats.StatMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatMeta}
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setMonotonic(value);
      break;
    case 3:
      var value = /** @type {!proto.xcalar.compute.localtypes.Stats.StatUnits} */ (reader.readEnum());
      msg.setUnits(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setMaxname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Stats.StatMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Stats.StatMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getMonotonic();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getUnits();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMaxname();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.StringValue name = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.getName = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatMeta} returns this
*/
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatMeta} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.BoolValue monotonic = 2;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.getMonotonic = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 2));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatMeta} returns this
*/
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.setMonotonic = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatMeta} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.clearMonotonic = function() {
  return this.setMonotonic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.hasMonotonic = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StatUnits units = 3;
 * @return {!proto.xcalar.compute.localtypes.Stats.StatUnits}
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.getUnits = function() {
  return /** @type {!proto.xcalar.compute.localtypes.Stats.StatUnits} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.xcalar.compute.localtypes.Stats.StatUnits} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatMeta} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.setUnits = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.StringValue maxName = 4;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.getMaxname = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 4));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatMeta} returns this
*/
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.setMaxname = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatMeta} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.clearMaxname = function() {
  return this.setMaxname(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.StatMeta.prototype.hasMaxname = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcalar.compute.localtypes.Stats.StatNode.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Stats.StatNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Stats.StatNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.StatNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    meta: (f = msg.getMeta()) && proto.xcalar.compute.localtypes.Stats.StatMeta.toObject(includeInstance, f),
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.xcalar.compute.localtypes.Stats.StatValue.toObject, includeInstance),
    maxvaluesList: jspb.Message.toObjectList(msg.getMaxvaluesList(),
    proto.xcalar.compute.localtypes.Stats.StatValue.toObject, includeInstance),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.xcalar.compute.localtypes.Stats.StatNode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Stats.StatNode;
  return proto.xcalar.compute.localtypes.Stats.StatNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Stats.StatNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.xcalar.compute.localtypes.Stats.StatMeta;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Stats.StatMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = new proto.xcalar.compute.localtypes.Stats.StatValue;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Stats.StatValue.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    case 4:
      var value = new proto.xcalar.compute.localtypes.Stats.StatValue;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Stats.StatValue.deserializeBinaryFromReader);
      msg.addMaxvalues(value);
      break;
    case 5:
      var value = new proto.xcalar.compute.localtypes.Stats.StatNode;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Stats.StatNode.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Stats.StatNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Stats.StatNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.StatNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.xcalar.compute.localtypes.Stats.StatMeta.serializeBinaryToWriter
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.xcalar.compute.localtypes.Stats.StatValue.serializeBinaryToWriter
    );
  }
  f = message.getMaxvaluesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.xcalar.compute.localtypes.Stats.StatValue.serializeBinaryToWriter
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.xcalar.compute.localtypes.Stats.StatNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional StatMeta meta = 2;
 * @return {?proto.xcalar.compute.localtypes.Stats.StatMeta}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.getMeta = function() {
  return /** @type{?proto.xcalar.compute.localtypes.Stats.StatMeta} */ (
    jspb.Message.getWrapperField(this, proto.xcalar.compute.localtypes.Stats.StatMeta, 2));
};


/**
 * @param {?proto.xcalar.compute.localtypes.Stats.StatMeta|undefined} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode} returns this
*/
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated StatValue values = 3;
 * @return {!Array<!proto.xcalar.compute.localtypes.Stats.StatValue>}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.xcalar.compute.localtypes.Stats.StatValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcalar.compute.localtypes.Stats.StatValue, 3));
};


/**
 * @param {!Array<!proto.xcalar.compute.localtypes.Stats.StatValue>} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode} returns this
*/
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.xcalar.compute.localtypes.Stats.StatValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.xcalar.compute.localtypes.Stats.StatValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * repeated StatValue maxValues = 4;
 * @return {!Array<!proto.xcalar.compute.localtypes.Stats.StatValue>}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.getMaxvaluesList = function() {
  return /** @type{!Array<!proto.xcalar.compute.localtypes.Stats.StatValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcalar.compute.localtypes.Stats.StatValue, 4));
};


/**
 * @param {!Array<!proto.xcalar.compute.localtypes.Stats.StatValue>} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode} returns this
*/
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.setMaxvaluesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.xcalar.compute.localtypes.Stats.StatValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcalar.compute.localtypes.Stats.StatValue}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.addMaxvalues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.xcalar.compute.localtypes.Stats.StatValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.clearMaxvaluesList = function() {
  return this.setMaxvaluesList([]);
};


/**
 * repeated StatNode children = 5;
 * @return {!Array<!proto.xcalar.compute.localtypes.Stats.StatNode>}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.getChildrenList = function() {
  return /** @type{!Array<!proto.xcalar.compute.localtypes.Stats.StatNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcalar.compute.localtypes.Stats.StatNode, 5));
};


/**
 * @param {!Array<!proto.xcalar.compute.localtypes.Stats.StatNode>} value
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode} returns this
*/
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.setChildrenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.xcalar.compute.localtypes.Stats.StatNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode}
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.xcalar.compute.localtypes.Stats.StatNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode} returns this
 */
proto.xcalar.compute.localtypes.Stats.StatNode.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Stats.GetStatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Stats.GetStatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    getmeta: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    getfromallnodes: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    statpathsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsRequest}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Stats.GetStatsRequest;
  return proto.xcalar.compute.localtypes.Stats.GetStatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Stats.GetStatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsRequest}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGetmeta(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGetfromallnodes(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatpaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Stats.GetStatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Stats.GetStatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGetmeta();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getGetfromallnodes();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStatpathsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional bool getMeta = 1;
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.prototype.getGetmeta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsRequest} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.prototype.setGetmeta = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool getFromAllNodes = 2;
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.prototype.getGetfromallnodes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsRequest} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.prototype.setGetfromallnodes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated string statPaths = 3;
 * @return {!Array<string>}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.prototype.getStatpathsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsRequest} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.prototype.setStatpathsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsRequest} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.prototype.addStatpaths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsRequest} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetStatsRequest.prototype.clearStatpathsList = function() {
  return this.setStatpathsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    errmsg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nodeid: (f = msg.getNodeid()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f),
    ts: (f = msg.getTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    statnodesList: jspb.Message.toObjectList(msg.getStatnodesList(),
    proto.xcalar.compute.localtypes.Stats.StatNode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse;
  return proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setNodeid(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTs(value);
      break;
    case 5:
      var value = new proto.xcalar.compute.localtypes.Stats.StatNode;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Stats.StatNode.deserializeBinaryFromReader);
      msg.addStatnodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNodeid();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getTs();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStatnodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.xcalar.compute.localtypes.Stats.StatNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string errMsg = 2;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.UInt32Value nodeId = 3;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.getNodeid = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 3));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse} returns this
*/
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.setNodeid = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.clearNodeid = function() {
  return this.setNodeid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.hasNodeid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp ts = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.getTs = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse} returns this
*/
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.setTs = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.clearTs = function() {
  return this.setTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.hasTs = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated StatNode statNodes = 5;
 * @return {!Array<!proto.xcalar.compute.localtypes.Stats.StatNode>}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.getStatnodesList = function() {
  return /** @type{!Array<!proto.xcalar.compute.localtypes.Stats.StatNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcalar.compute.localtypes.Stats.StatNode, 5));
};


/**
 * @param {!Array<!proto.xcalar.compute.localtypes.Stats.StatNode>} value
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse} returns this
*/
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.setStatnodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.xcalar.compute.localtypes.Stats.StatNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcalar.compute.localtypes.Stats.StatNode}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.addStatnodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.xcalar.compute.localtypes.Stats.StatNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.prototype.clearStatnodesList = function() {
  return this.setStatnodesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcalar.compute.localtypes.Stats.GetStatsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Stats.GetStatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Stats.GetStatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.GetStatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    perhoststatsList: jspb.Message.toObjectList(msg.getPerhoststatsList(),
    proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsResponse}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Stats.GetStatsResponse;
  return proto.xcalar.compute.localtypes.Stats.GetStatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Stats.GetStatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsResponse}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.deserializeBinaryFromReader);
      msg.addPerhoststats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Stats.GetStatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Stats.GetStatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.GetStatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPerhoststatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GetStatsPerHostResponse perHostStats = 1;
 * @return {!Array<!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse>}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsResponse.prototype.getPerhoststatsList = function() {
  return /** @type{!Array<!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse, 1));
};


/**
 * @param {!Array<!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse>} value
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsResponse} returns this
*/
proto.xcalar.compute.localtypes.Stats.GetStatsResponse.prototype.setPerhoststatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse}
 */
proto.xcalar.compute.localtypes.Stats.GetStatsResponse.prototype.addPerhoststats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcalar.compute.localtypes.Stats.GetStatsPerHostResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetStatsResponse} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetStatsResponse.prototype.clearPerhoststatsList = function() {
  return this.setPerhoststatsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest}
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest;
  return proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest}
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Stats.LibstatNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Stats.LibstatNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    statname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    statvalue: (f = msg.getStatvalue()) && proto.xcalar.compute.localtypes.Stats.StatValue.toObject(includeInstance, f),
    groupid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    stattype: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Stats.LibstatNode}
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Stats.LibstatNode;
  return proto.xcalar.compute.localtypes.Stats.LibstatNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Stats.LibstatNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Stats.LibstatNode}
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatname(value);
      break;
    case 2:
      var value = new proto.xcalar.compute.localtypes.Stats.StatValue;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Stats.StatValue.deserializeBinaryFromReader);
      msg.setStatvalue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 4:
      var value = /** @type {!proto.xcalar.compute.localtypes.Stats.StatType} */ (reader.readEnum());
      msg.setStattype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Stats.LibstatNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Stats.LibstatNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatvalue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.xcalar.compute.localtypes.Stats.StatValue.serializeBinaryToWriter
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getStattype();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string statName = 1;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.getStatname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Stats.LibstatNode} returns this
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.setStatname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional StatValue statValue = 2;
 * @return {?proto.xcalar.compute.localtypes.Stats.StatValue}
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.getStatvalue = function() {
  return /** @type{?proto.xcalar.compute.localtypes.Stats.StatValue} */ (
    jspb.Message.getWrapperField(this, proto.xcalar.compute.localtypes.Stats.StatValue, 2));
};


/**
 * @param {?proto.xcalar.compute.localtypes.Stats.StatValue|undefined} value
 * @return {!proto.xcalar.compute.localtypes.Stats.LibstatNode} returns this
*/
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.setStatvalue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Stats.LibstatNode} returns this
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.clearStatvalue = function() {
  return this.setStatvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.hasStatvalue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 groupId = 3;
 * @return {number}
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.Stats.LibstatNode} returns this
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional StatType statType = 4;
 * @return {!proto.xcalar.compute.localtypes.Stats.StatType}
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.getStattype = function() {
  return /** @type {!proto.xcalar.compute.localtypes.Stats.StatType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.xcalar.compute.localtypes.Stats.StatType} value
 * @return {!proto.xcalar.compute.localtypes.Stats.LibstatNode} returns this
 */
proto.xcalar.compute.localtypes.Stats.LibstatNode.prototype.setStattype = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    libstatnodesList: jspb.Message.toObjectList(msg.getLibstatnodesList(),
    proto.xcalar.compute.localtypes.Stats.LibstatNode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse}
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse;
  return proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse}
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcalar.compute.localtypes.Stats.LibstatNode;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Stats.LibstatNode.deserializeBinaryFromReader);
      msg.addLibstatnodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLibstatnodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.xcalar.compute.localtypes.Stats.LibstatNode.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LibstatNode libstatNodes = 1;
 * @return {!Array<!proto.xcalar.compute.localtypes.Stats.LibstatNode>}
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.prototype.getLibstatnodesList = function() {
  return /** @type{!Array<!proto.xcalar.compute.localtypes.Stats.LibstatNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcalar.compute.localtypes.Stats.LibstatNode, 1));
};


/**
 * @param {!Array<!proto.xcalar.compute.localtypes.Stats.LibstatNode>} value
 * @return {!proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse} returns this
*/
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.prototype.setLibstatnodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.xcalar.compute.localtypes.Stats.LibstatNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcalar.compute.localtypes.Stats.LibstatNode}
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.prototype.addLibstatnodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.xcalar.compute.localtypes.Stats.LibstatNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse} returns this
 */
proto.xcalar.compute.localtypes.Stats.GetLibstatsResponse.prototype.clearLibstatnodesList = function() {
  return this.setLibstatnodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Stats.ResetStatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    resethwmstats: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    resetcumulativestats: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Stats.ResetStatsRequest}
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Stats.ResetStatsRequest;
  return proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Stats.ResetStatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Stats.ResetStatsRequest}
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNodeid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResethwmstats(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResetcumulativestats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Stats.ResetStatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getResethwmstats();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getResetcumulativestats();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 nodeId = 1;
 * @return {number}
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.prototype.getNodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.xcalar.compute.localtypes.Stats.ResetStatsRequest} returns this
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool resetHwmStats = 2;
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.prototype.getResethwmstats = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcalar.compute.localtypes.Stats.ResetStatsRequest} returns this
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.prototype.setResethwmstats = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool resetCumulativeStats = 3;
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.prototype.getResetcumulativestats = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcalar.compute.localtypes.Stats.ResetStatsRequest} returns this
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsRequest.prototype.setResetcumulativestats = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Stats.ResetStatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Stats.ResetStatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Stats.ResetStatsResponse}
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Stats.ResetStatsResponse;
  return proto.xcalar.compute.localtypes.Stats.ResetStatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Stats.ResetStatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Stats.ResetStatsResponse}
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Stats.ResetStatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Stats.ResetStatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Stats.ResetStatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.xcalar.compute.localtypes.Stats.StatUnits = {
  DEFAULT: 0,
  UNITLESS: 1,
  PERCENT: 2,
  MICROSECONDS: 3,
  BYTES: 4,
  OPERATIONS: 5,
  COUNT: 6
};

/**
 * @enum {number}
 */
proto.xcalar.compute.localtypes.Stats.StatType = {
  STATCUMULATIVE: 0,
  STATABSOLUTEWITHREFVAL: 1,
  STATABSOLUTEWITHNOREFVAL: 2
};

goog.object.extend(exports, proto.xcalar.compute.localtypes.Stats);
