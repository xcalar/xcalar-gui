// source: xcalar/compute/localtypes/Workbook.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Workbook.ScopeType', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Workbook.WorkbookScope', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Workbook.WorkbookScope.SpecifierCase', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier', null, global);
goog.exportSymbol('proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.displayName = 'proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.displayName = 'proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.displayName = 'proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.xcalar.compute.localtypes.Workbook.WorkbookScope.oneofGroups_);
};
goog.inherits(proto.xcalar.compute.localtypes.Workbook.WorkbookScope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Workbook.WorkbookScope.displayName = 'proto.xcalar.compute.localtypes.Workbook.WorkbookScope';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.repeatedFields_, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.displayName = 'proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.displayName = 'proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.displayName = 'proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier}
 */
proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier;
  return proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier}
 */
proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier;
  return proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    workbookname: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier;
  return proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkbookname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWorkbookname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier} returns this
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string workbookName = 2;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.prototype.getWorkbookname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier} returns this
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier.prototype.setWorkbookname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional NameSpecifier name = 1;
 * @return {?proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.prototype.getName = function() {
  return /** @type{?proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier} */ (
    jspb.Message.getWrapperField(this, proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier, 1));
};


/**
 * @param {?proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.NameSpecifier|undefined} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier} returns this
*/
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier} returns this
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.SpecifierCase = {
  SPECIFIER_NOT_SET: 0,
  GLOBL: 2,
  WORKBOOK: 3
};

/**
 * @return {proto.xcalar.compute.localtypes.Workbook.WorkbookScope.SpecifierCase}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.prototype.getSpecifierCase = function() {
  return /** @type {proto.xcalar.compute.localtypes.Workbook.WorkbookScope.SpecifierCase} */(jspb.Message.computeOneofCase(this, proto.xcalar.compute.localtypes.Workbook.WorkbookScope.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Workbook.WorkbookScope.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Workbook.WorkbookScope} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.toObject = function(includeInstance, msg) {
  var f, obj = {
    globl: (f = msg.getGlobl()) && proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.toObject(includeInstance, f),
    workbook: (f = msg.getWorkbook()) && proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookScope}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Workbook.WorkbookScope;
  return proto.xcalar.compute.localtypes.Workbook.WorkbookScope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Workbook.WorkbookScope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookScope}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.deserializeBinaryFromReader);
      msg.setGlobl(value);
      break;
    case 3:
      var value = new proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.deserializeBinaryFromReader);
      msg.setWorkbook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Workbook.WorkbookScope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Workbook.WorkbookScope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGlobl();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier.serializeBinaryToWriter
    );
  }
  f = message.getWorkbook();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional GlobalSpecifier globl = 2;
 * @return {?proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.prototype.getGlobl = function() {
  return /** @type{?proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier} */ (
    jspb.Message.getWrapperField(this, proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier, 2));
};


/**
 * @param {?proto.xcalar.compute.localtypes.Workbook.GlobalSpecifier|undefined} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookScope} returns this
*/
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.prototype.setGlobl = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.xcalar.compute.localtypes.Workbook.WorkbookScope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookScope} returns this
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.prototype.clearGlobl = function() {
  return this.setGlobl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.prototype.hasGlobl = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional WorkbookSpecifier workbook = 3;
 * @return {?proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.prototype.getWorkbook = function() {
  return /** @type{?proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier} */ (
    jspb.Message.getWrapperField(this, proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier, 3));
};


/**
 * @param {?proto.xcalar.compute.localtypes.Workbook.WorkbookSpecifier|undefined} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookScope} returns this
*/
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.prototype.setWorkbook = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.xcalar.compute.localtypes.Workbook.WorkbookScope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.xcalar.compute.localtypes.Workbook.WorkbookScope} returns this
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.prototype.clearWorkbook = function() {
  return this.setWorkbook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Workbook.WorkbookScope.prototype.hasWorkbook = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.repeatedFields_ = [1,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    kvsstringList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    dataflowname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    optimized: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    listxdfsoutput: jspb.Message.getFieldWithDefault(msg, 4, ""),
    username: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sessionid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    workbookname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    parametersList: jspb.Message.toObjectList(msg.getParametersList(),
    proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest;
  return proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addKvsstring(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataflowname(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOptimized(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setListxdfsoutput(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkbookname(value);
      break;
    case 8:
      var value = new proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter;
      reader.readMessage(value,proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.deserializeBinaryFromReader);
      msg.addParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKvsstringList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getDataflowname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptimized();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getListxdfsoutput();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWorkbookname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter;
  return proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string kvsString = 1;
 * @return {!Array<string>}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.getKvsstringList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.setKvsstringList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.addKvsstring = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.clearKvsstringList = function() {
  return this.setKvsstringList([]);
};


/**
 * optional string dataflowName = 2;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.getDataflowname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.setDataflowname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool optimized = 3;
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.getOptimized = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.setOptimized = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string listXdfsOutput = 4;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.getListxdfsoutput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.setListxdfsoutput = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string userName = 5;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string sessionId = 6;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string workbookName = 7;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.getWorkbookname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.setWorkbookname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated Parameter parameters = 8;
 * @return {!Array<!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter>}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.getParametersList = function() {
  return /** @type{!Array<!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter, 8));
};


/**
 * @param {!Array<!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter>} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} returns this
*/
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.setParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.addParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.Parameter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryRequest.prototype.clearParametersList = function() {
  return this.setParametersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    converted: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    resultstring: jspb.Message.getFieldWithDefault(msg, 2, ""),
    publishresultmapMap: (f = msg.getPublishresultmapMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse;
  return proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConverted(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultstring(value);
      break;
    case 3:
      var value = msg.getPublishresultmapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConverted();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getResultstring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPublishresultmapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional bool converted = 1;
 * @return {boolean}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.prototype.getConverted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.prototype.setConverted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string resultString = 2;
 * @return {string}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.prototype.getResultstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.prototype.setResultstring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> publishResultMap = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.prototype.getPublishresultmapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse} returns this
 */
proto.xcalar.compute.localtypes.Workbook.ConvertKvsToQueryResponse.prototype.clearPublishresultmapMap = function() {
  this.getPublishresultmapMap().clear();
  return this;};


/**
 * @enum {number}
 */
proto.xcalar.compute.localtypes.Workbook.ScopeType = {
  GLOBALSCOPETYPE: 0,
  WORKBOOKSCOPETYPE: 1
};

goog.object.extend(exports, proto.xcalar.compute.localtypes.Workbook);
