// source: xcalar/compute/localtypes/ParentChild.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var xcalar_compute_localtypes_ProtoFieldValue_pb = require('../../../xcalar/compute/localtypes/ProtoFieldValue_pb.js');
goog.object.extend(proto, xcalar_compute_localtypes_ProtoFieldValue_pb);
var xcalar_compute_localtypes_RuntimeEnums_pb = require('../../../xcalar/compute/localtypes/RuntimeEnums_pb.js');
goog.object.extend(proto, xcalar_compute_localtypes_RuntimeEnums_pb);
goog.exportSymbol('proto.ChildAppStartRequest', null, global);
goog.exportSymbol('proto.ChildAppStartRequest.XpuIdRange', null, global);
goog.exportSymbol('proto.ChildEvalRequest', null, global);
goog.exportSymbol('proto.ChildUdfInitRequest', null, global);
goog.exportSymbol('proto.ParentAppDoneRequest', null, global);
goog.exportSymbol('proto.ParentAppGetOutputBuffersRequest', null, global);
goog.exportSymbol('proto.ParentAppLoadBufferRequest', null, global);
goog.exportSymbol('proto.ParentAppLoadBufferRequest.Buffer', null, global);
goog.exportSymbol('proto.ParentAppLoadBufferRequest.DataBuffer', null, global);
goog.exportSymbol('proto.ParentAppRequest', null, global);
goog.exportSymbol('proto.ParentAppRequest.PayloadCase', null, global);
goog.exportSymbol('proto.ParentChildBuf', null, global);
goog.exportSymbol('proto.ParentChildShmPtr', null, global);
goog.exportSymbol('proto.ParentGetOutputBufferResponse', null, global);
goog.exportSymbol('proto.ParentGetOutputBufferResponse.Buffer', null, global);
goog.exportSymbol('proto.ParentReportFileErrorRequest', null, global);
goog.exportSymbol('proto.ParentReportNumFilesRequest', null, global);
goog.exportSymbol('proto.ProtoChildFunc', null, global);
goog.exportSymbol('proto.ProtoChildRequest', null, global);
goog.exportSymbol('proto.ProtoChildRequest.PayloadCase', null, global);
goog.exportSymbol('proto.ProtoParentChildResponse', null, global);
goog.exportSymbol('proto.ProtoParentChildResponse.PayloadCase', null, global);
goog.exportSymbol('proto.ProtoParentFunc', null, global);
goog.exportSymbol('proto.ProtoParentRequest', null, global);
goog.exportSymbol('proto.ProtoParentRequest.PayloadCase', null, global);
goog.exportSymbol('proto.ProtoTxn', null, global);
goog.exportSymbol('proto.ProtoTxn.ModeType', null, global);
goog.exportSymbol('proto.ProtoTxn.SchedType', null, global);
goog.exportSymbol('proto.RuntimeHistogramsRequest', null, global);
goog.exportSymbol('proto.RuntimeHistogramsResponse', null, global);
goog.exportSymbol('proto.RuntimeHistogramsResponse.Histogram', null, global);
goog.exportSymbol('proto.RuntimeHistogramsResponse.Histogram.Item', null, global);
goog.exportSymbol('proto.XdbColumnDesc', null, global);
goog.exportSymbol('proto.XdbGetLocalRowsRequest', null, global);
goog.exportSymbol('proto.XdbGetLocalRowsResponse', null, global);
goog.exportSymbol('proto.XdbGetLocalRowsResponse.DataCase', null, global);
goog.exportSymbol('proto.XdbGetLocalRowsResponse.RowBatch', null, global);
goog.exportSymbol('proto.XdbGetMetaRequest', null, global);
goog.exportSymbol('proto.XdbGetMetaResponse', null, global);
goog.exportSymbol('proto.XpuReceiveBufferFromSrc', null, global);
goog.exportSymbol('proto.XpuReceiveBufferFromSrc.Buffer', null, global);
goog.exportSymbol('proto.XpuSendListToDsts', null, global);
goog.exportSymbol('proto.XpuSendListToDsts.Buffer', null, global);
goog.exportSymbol('proto.XpuSendListToDsts.XpuSendListBufferToDst', null, global);
goog.exportSymbol('proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentChildBuf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentChildBuf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentChildBuf.displayName = 'proto.ParentChildBuf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoTxn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoTxn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoTxn.displayName = 'proto.ProtoTxn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentChildShmPtr = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentChildShmPtr, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentChildShmPtr.displayName = 'proto.ParentChildShmPtr';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ChildUdfInitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ChildUdfInitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ChildUdfInitRequest.displayName = 'proto.ChildUdfInitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ChildEvalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ChildEvalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ChildEvalRequest.displayName = 'proto.ChildEvalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ChildAppStartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ChildAppStartRequest.repeatedFields_, null);
};
goog.inherits(proto.ChildAppStartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ChildAppStartRequest.displayName = 'proto.ChildAppStartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ChildAppStartRequest.XpuIdRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ChildAppStartRequest.XpuIdRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ChildAppStartRequest.XpuIdRange.displayName = 'proto.ChildAppStartRequest.XpuIdRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XpuReceiveBufferFromSrc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XpuReceiveBufferFromSrc.repeatedFields_, null);
};
goog.inherits(proto.XpuReceiveBufferFromSrc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XpuReceiveBufferFromSrc.displayName = 'proto.XpuReceiveBufferFromSrc';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XpuReceiveBufferFromSrc.Buffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.XpuReceiveBufferFromSrc.Buffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XpuReceiveBufferFromSrc.Buffer.displayName = 'proto.XpuReceiveBufferFromSrc.Buffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoChildRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ProtoChildRequest.oneofGroups_);
};
goog.inherits(proto.ProtoChildRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoChildRequest.displayName = 'proto.ProtoChildRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppGetOutputBuffersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentAppGetOutputBuffersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentAppGetOutputBuffersRequest.displayName = 'proto.ParentAppGetOutputBuffersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppDoneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentAppDoneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentAppDoneRequest.displayName = 'proto.ParentAppDoneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentReportNumFilesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentReportNumFilesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentReportNumFilesRequest.displayName = 'proto.ParentReportNumFilesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppLoadBufferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ParentAppLoadBufferRequest.repeatedFields_, null);
};
goog.inherits(proto.ParentAppLoadBufferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentAppLoadBufferRequest.displayName = 'proto.ParentAppLoadBufferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppLoadBufferRequest.Buffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentAppLoadBufferRequest.Buffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentAppLoadBufferRequest.Buffer.displayName = 'proto.ParentAppLoadBufferRequest.Buffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppLoadBufferRequest.DataBuffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentAppLoadBufferRequest.DataBuffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentAppLoadBufferRequest.DataBuffer.displayName = 'proto.ParentAppLoadBufferRequest.DataBuffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XpuSendListToDsts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XpuSendListToDsts.repeatedFields_, null);
};
goog.inherits(proto.XpuSendListToDsts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XpuSendListToDsts.displayName = 'proto.XpuSendListToDsts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XpuSendListToDsts.Buffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.XpuSendListToDsts.Buffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XpuSendListToDsts.Buffer.displayName = 'proto.XpuSendListToDsts.Buffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XpuSendListToDsts.XpuSendListBufferToDst.repeatedFields_, null);
};
goog.inherits(proto.XpuSendListToDsts.XpuSendListBufferToDst, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XpuSendListToDsts.XpuSendListBufferToDst.displayName = 'proto.XpuSendListToDsts.XpuSendListBufferToDst';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.displayName = 'proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentReportFileErrorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentReportFileErrorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentReportFileErrorRequest.displayName = 'proto.ParentReportFileErrorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbGetMetaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.XdbGetMetaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XdbGetMetaRequest.displayName = 'proto.XdbGetMetaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbColumnDesc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.XdbColumnDesc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XdbColumnDesc.displayName = 'proto.XdbColumnDesc';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbGetMetaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XdbGetMetaResponse.repeatedFields_, null);
};
goog.inherits(proto.XdbGetMetaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XdbGetMetaResponse.displayName = 'proto.XdbGetMetaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbGetLocalRowsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XdbGetLocalRowsRequest.repeatedFields_, null);
};
goog.inherits(proto.XdbGetLocalRowsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XdbGetLocalRowsRequest.displayName = 'proto.XdbGetLocalRowsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbGetLocalRowsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.XdbGetLocalRowsResponse.oneofGroups_);
};
goog.inherits(proto.XdbGetLocalRowsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XdbGetLocalRowsResponse.displayName = 'proto.XdbGetLocalRowsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.XdbGetLocalRowsResponse.RowBatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.XdbGetLocalRowsResponse.RowBatch.repeatedFields_, null);
};
goog.inherits(proto.XdbGetLocalRowsResponse.RowBatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.XdbGetLocalRowsResponse.RowBatch.displayName = 'proto.XdbGetLocalRowsResponse.RowBatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RuntimeHistogramsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RuntimeHistogramsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RuntimeHistogramsRequest.displayName = 'proto.RuntimeHistogramsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RuntimeHistogramsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RuntimeHistogramsResponse.repeatedFields_, null);
};
goog.inherits(proto.RuntimeHistogramsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RuntimeHistogramsResponse.displayName = 'proto.RuntimeHistogramsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RuntimeHistogramsResponse.Histogram = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RuntimeHistogramsResponse.Histogram.repeatedFields_, null);
};
goog.inherits(proto.RuntimeHistogramsResponse.Histogram, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RuntimeHistogramsResponse.Histogram.displayName = 'proto.RuntimeHistogramsResponse.Histogram';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RuntimeHistogramsResponse.Histogram.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RuntimeHistogramsResponse.Histogram.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RuntimeHistogramsResponse.Histogram.Item.displayName = 'proto.RuntimeHistogramsResponse.Histogram.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentAppRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ParentAppRequest.oneofGroups_);
};
goog.inherits(proto.ParentAppRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentAppRequest.displayName = 'proto.ParentAppRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoParentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ProtoParentRequest.oneofGroups_);
};
goog.inherits(proto.ProtoParentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoParentRequest.displayName = 'proto.ProtoParentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentGetOutputBufferResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ParentGetOutputBufferResponse.repeatedFields_, null);
};
goog.inherits(proto.ParentGetOutputBufferResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentGetOutputBufferResponse.displayName = 'proto.ParentGetOutputBufferResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParentGetOutputBufferResponse.Buffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParentGetOutputBufferResponse.Buffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ParentGetOutputBufferResponse.Buffer.displayName = 'proto.ParentGetOutputBufferResponse.Buffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoParentChildResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ProtoParentChildResponse.oneofGroups_);
};
goog.inherits(proto.ProtoParentChildResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoParentChildResponse.displayName = 'proto.ProtoParentChildResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentChildBuf.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentChildBuf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentChildBuf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentChildBuf.toObject = function(includeInstance, msg) {
  var f, obj = {
    buf: msg.getBuf_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentChildBuf}
 */
proto.ParentChildBuf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentChildBuf;
  return proto.ParentChildBuf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentChildBuf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentChildBuf}
 */
proto.ParentChildBuf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBuf(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentChildBuf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentChildBuf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentChildBuf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentChildBuf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuf_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes buf = 1;
 * @return {!(string|Uint8Array)}
 */
proto.ParentChildBuf.prototype.getBuf = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes buf = 1;
 * This is a type-conversion wrapper around `getBuf()`
 * @return {string}
 */
proto.ParentChildBuf.prototype.getBuf_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBuf()));
};


/**
 * optional bytes buf = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBuf()`
 * @return {!Uint8Array}
 */
proto.ParentChildBuf.prototype.getBuf_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBuf()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ParentChildBuf} returns this
 */
proto.ParentChildBuf.prototype.setBuf = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoTxn.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoTxn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoTxn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoTxn.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    schedid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    runtimetype: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoTxn}
 */
proto.ProtoTxn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoTxn;
  return proto.ProtoTxn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoTxn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoTxn}
 */
proto.ProtoTxn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.ProtoTxn.ModeType} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 3:
      var value = /** @type {!proto.ProtoTxn.SchedType} */ (reader.readEnum());
      msg.setSchedid(value);
      break;
    case 4:
      var value = /** @type {!proto.xcalar.compute.localtypes.XcalarEnumType.RuntimeType} */ (reader.readEnum());
      msg.setRuntimetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoTxn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoTxn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoTxn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoTxn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSchedid();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getRuntimetype();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ProtoTxn.SchedType = {
  SCHED0: 0,
  SCHED1: 1,
  SCHED2: 2,
  IMMEDIATE: 3,
  MAXSCHED: 4
};

/**
 * @enum {number}
 */
proto.ProtoTxn.ModeType = {
  LRQ: 0,
  NONLRQ: 1,
  INVALID: 2
};

/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.ProtoTxn.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoTxn} returns this
 */
proto.ProtoTxn.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ModeType mode = 2;
 * @return {!proto.ProtoTxn.ModeType}
 */
proto.ProtoTxn.prototype.getMode = function() {
  return /** @type {!proto.ProtoTxn.ModeType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ProtoTxn.ModeType} value
 * @return {!proto.ProtoTxn} returns this
 */
proto.ProtoTxn.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional SchedType schedId = 3;
 * @return {!proto.ProtoTxn.SchedType}
 */
proto.ProtoTxn.prototype.getSchedid = function() {
  return /** @type {!proto.ProtoTxn.SchedType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ProtoTxn.SchedType} value
 * @return {!proto.ProtoTxn} returns this
 */
proto.ProtoTxn.prototype.setSchedid = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional xcalar.compute.localtypes.XcalarEnumType.RuntimeType runTimeType = 4;
 * @return {!proto.xcalar.compute.localtypes.XcalarEnumType.RuntimeType}
 */
proto.ProtoTxn.prototype.getRuntimetype = function() {
  return /** @type {!proto.xcalar.compute.localtypes.XcalarEnumType.RuntimeType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.xcalar.compute.localtypes.XcalarEnumType.RuntimeType} value
 * @return {!proto.ProtoTxn} returns this
 */
proto.ProtoTxn.prototype.setRuntimetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentChildShmPtr.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentChildShmPtr.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentChildShmPtr} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentChildShmPtr.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bufcacheoffset: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentChildShmPtr}
 */
proto.ParentChildShmPtr.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentChildShmPtr;
  return proto.ParentChildShmPtr.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentChildShmPtr} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentChildShmPtr}
 */
proto.ParentChildShmPtr.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBufcacheoffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentChildShmPtr.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentChildShmPtr.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentChildShmPtr} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentChildShmPtr.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getBufcacheoffset();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint32 index = 1;
 * @return {number}
 */
proto.ParentChildShmPtr.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentChildShmPtr} returns this
 */
proto.ParentChildShmPtr.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 offset = 2;
 * @return {number}
 */
proto.ParentChildShmPtr.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentChildShmPtr} returns this
 */
proto.ParentChildShmPtr.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 bufCacheOffset = 3;
 * @return {number}
 */
proto.ParentChildShmPtr.prototype.getBufcacheoffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentChildShmPtr} returns this
 */
proto.ParentChildShmPtr.prototype.setBufcacheoffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ChildUdfInitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ChildUdfInitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ChildUdfInitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildUdfInitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sessionid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ChildUdfInitRequest}
 */
proto.ChildUdfInitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ChildUdfInitRequest;
  return proto.ChildUdfInitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ChildUdfInitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ChildUdfInitRequest}
 */
proto.ChildUdfInitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSessionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ChildUdfInitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ChildUdfInitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ChildUdfInitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildUdfInitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSessionid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string userName = 1;
 * @return {string}
 */
proto.ChildUdfInitRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ChildUdfInitRequest} returns this
 */
proto.ChildUdfInitRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 sessionId = 2;
 * @return {number}
 */
proto.ChildUdfInitRequest.prototype.getSessionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ChildUdfInitRequest} returns this
 */
proto.ChildUdfInitRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ChildEvalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ChildEvalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ChildEvalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildEvalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ptrinput: (f = msg.getPtrinput()) && proto.ParentChildShmPtr.toObject(includeInstance, f),
    ptroutput: (f = msg.getPtroutput()) && proto.ParentChildShmPtr.toObject(includeInstance, f),
    icvmode: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ChildEvalRequest}
 */
proto.ChildEvalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ChildEvalRequest;
  return proto.ChildEvalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ChildEvalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ChildEvalRequest}
 */
proto.ChildEvalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ParentChildShmPtr;
      reader.readMessage(value,proto.ParentChildShmPtr.deserializeBinaryFromReader);
      msg.setPtrinput(value);
      break;
    case 2:
      var value = new proto.ParentChildShmPtr;
      reader.readMessage(value,proto.ParentChildShmPtr.deserializeBinaryFromReader);
      msg.setPtroutput(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIcvmode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ChildEvalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ChildEvalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ChildEvalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildEvalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPtrinput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ParentChildShmPtr.serializeBinaryToWriter
    );
  }
  f = message.getPtroutput();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ParentChildShmPtr.serializeBinaryToWriter
    );
  }
  f = message.getIcvmode();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional ParentChildShmPtr ptrInput = 1;
 * @return {?proto.ParentChildShmPtr}
 */
proto.ChildEvalRequest.prototype.getPtrinput = function() {
  return /** @type{?proto.ParentChildShmPtr} */ (
    jspb.Message.getWrapperField(this, proto.ParentChildShmPtr, 1));
};


/**
 * @param {?proto.ParentChildShmPtr|undefined} value
 * @return {!proto.ChildEvalRequest} returns this
*/
proto.ChildEvalRequest.prototype.setPtrinput = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ChildEvalRequest} returns this
 */
proto.ChildEvalRequest.prototype.clearPtrinput = function() {
  return this.setPtrinput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ChildEvalRequest.prototype.hasPtrinput = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ParentChildShmPtr ptrOutput = 2;
 * @return {?proto.ParentChildShmPtr}
 */
proto.ChildEvalRequest.prototype.getPtroutput = function() {
  return /** @type{?proto.ParentChildShmPtr} */ (
    jspb.Message.getWrapperField(this, proto.ParentChildShmPtr, 2));
};


/**
 * @param {?proto.ParentChildShmPtr|undefined} value
 * @return {!proto.ChildEvalRequest} returns this
*/
proto.ChildEvalRequest.prototype.setPtroutput = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ChildEvalRequest} returns this
 */
proto.ChildEvalRequest.prototype.clearPtroutput = function() {
  return this.setPtroutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ChildEvalRequest.prototype.hasPtroutput = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool icvMode = 3;
 * @return {boolean}
 */
proto.ChildEvalRequest.prototype.getIcvmode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ChildEvalRequest} returns this
 */
proto.ChildEvalRequest.prototype.setIcvmode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ChildAppStartRequest.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ChildAppStartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ChildAppStartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ChildAppStartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildAppStartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hosttype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    exec: msg.getExec_asB64(),
    instr: jspb.Message.getFieldWithDefault(msg, 3, ""),
    appname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    username: jspb.Message.getFieldWithDefault(msg, 5, ""),
    xpuid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    xpuclustersize: jspb.Message.getFieldWithDefault(msg, 7, 0),
    sessionid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    xpuidrangeList: jspb.Message.toObjectList(msg.getXpuidrangeList(),
    proto.ChildAppStartRequest.XpuIdRange.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ChildAppStartRequest}
 */
proto.ChildAppStartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ChildAppStartRequest;
  return proto.ChildAppStartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ChildAppStartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ChildAppStartRequest}
 */
proto.ChildAppStartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHosttype(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setExec(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstr(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setXpuid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setXpuclustersize(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSessionid(value);
      break;
    case 9:
      var value = new proto.ChildAppStartRequest.XpuIdRange;
      reader.readMessage(value,proto.ChildAppStartRequest.XpuIdRange.deserializeBinaryFromReader);
      msg.addXpuidrange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ChildAppStartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ChildAppStartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ChildAppStartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildAppStartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHosttype();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getExec_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getInstr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAppname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getXpuid();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getXpuclustersize();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getSessionid();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getXpuidrangeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ChildAppStartRequest.XpuIdRange.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ChildAppStartRequest.XpuIdRange.prototype.toObject = function(opt_includeInstance) {
  return proto.ChildAppStartRequest.XpuIdRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ChildAppStartRequest.XpuIdRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildAppStartRequest.XpuIdRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    xpuidstart: jspb.Message.getFieldWithDefault(msg, 1, 0),
    xpuidend: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ChildAppStartRequest.XpuIdRange}
 */
proto.ChildAppStartRequest.XpuIdRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ChildAppStartRequest.XpuIdRange;
  return proto.ChildAppStartRequest.XpuIdRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ChildAppStartRequest.XpuIdRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ChildAppStartRequest.XpuIdRange}
 */
proto.ChildAppStartRequest.XpuIdRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setXpuidstart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setXpuidend(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ChildAppStartRequest.XpuIdRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ChildAppStartRequest.XpuIdRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ChildAppStartRequest.XpuIdRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChildAppStartRequest.XpuIdRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXpuidstart();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getXpuidend();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 xpuIdStart = 1;
 * @return {number}
 */
proto.ChildAppStartRequest.XpuIdRange.prototype.getXpuidstart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ChildAppStartRequest.XpuIdRange} returns this
 */
proto.ChildAppStartRequest.XpuIdRange.prototype.setXpuidstart = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 xpuIdEnd = 2;
 * @return {number}
 */
proto.ChildAppStartRequest.XpuIdRange.prototype.getXpuidend = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ChildAppStartRequest.XpuIdRange} returns this
 */
proto.ChildAppStartRequest.XpuIdRange.prototype.setXpuidend = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 hostType = 1;
 * @return {number}
 */
proto.ChildAppStartRequest.prototype.getHosttype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ChildAppStartRequest} returns this
 */
proto.ChildAppStartRequest.prototype.setHosttype = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes exec = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ChildAppStartRequest.prototype.getExec = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes exec = 2;
 * This is a type-conversion wrapper around `getExec()`
 * @return {string}
 */
proto.ChildAppStartRequest.prototype.getExec_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getExec()));
};


/**
 * optional bytes exec = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getExec()`
 * @return {!Uint8Array}
 */
proto.ChildAppStartRequest.prototype.getExec_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getExec()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ChildAppStartRequest} returns this
 */
proto.ChildAppStartRequest.prototype.setExec = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string inStr = 3;
 * @return {string}
 */
proto.ChildAppStartRequest.prototype.getInstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ChildAppStartRequest} returns this
 */
proto.ChildAppStartRequest.prototype.setInstr = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string appName = 4;
 * @return {string}
 */
proto.ChildAppStartRequest.prototype.getAppname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ChildAppStartRequest} returns this
 */
proto.ChildAppStartRequest.prototype.setAppname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string userName = 5;
 * @return {string}
 */
proto.ChildAppStartRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ChildAppStartRequest} returns this
 */
proto.ChildAppStartRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 xpuId = 6;
 * @return {number}
 */
proto.ChildAppStartRequest.prototype.getXpuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ChildAppStartRequest} returns this
 */
proto.ChildAppStartRequest.prototype.setXpuid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 xpuClusterSize = 7;
 * @return {number}
 */
proto.ChildAppStartRequest.prototype.getXpuclustersize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ChildAppStartRequest} returns this
 */
proto.ChildAppStartRequest.prototype.setXpuclustersize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 sessionId = 8;
 * @return {number}
 */
proto.ChildAppStartRequest.prototype.getSessionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ChildAppStartRequest} returns this
 */
proto.ChildAppStartRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated XpuIdRange xpuIdRange = 9;
 * @return {!Array<!proto.ChildAppStartRequest.XpuIdRange>}
 */
proto.ChildAppStartRequest.prototype.getXpuidrangeList = function() {
  return /** @type{!Array<!proto.ChildAppStartRequest.XpuIdRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ChildAppStartRequest.XpuIdRange, 9));
};


/**
 * @param {!Array<!proto.ChildAppStartRequest.XpuIdRange>} value
 * @return {!proto.ChildAppStartRequest} returns this
*/
proto.ChildAppStartRequest.prototype.setXpuidrangeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ChildAppStartRequest.XpuIdRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ChildAppStartRequest.XpuIdRange}
 */
proto.ChildAppStartRequest.prototype.addXpuidrange = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ChildAppStartRequest.XpuIdRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ChildAppStartRequest} returns this
 */
proto.ChildAppStartRequest.prototype.clearXpuidrangeList = function() {
  return this.setXpuidrangeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XpuReceiveBufferFromSrc.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XpuReceiveBufferFromSrc.prototype.toObject = function(opt_includeInstance) {
  return proto.XpuReceiveBufferFromSrc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XpuReceiveBufferFromSrc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuReceiveBufferFromSrc.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcxpuid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dstxpuid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    buffersList: jspb.Message.toObjectList(msg.getBuffersList(),
    proto.XpuReceiveBufferFromSrc.Buffer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XpuReceiveBufferFromSrc}
 */
proto.XpuReceiveBufferFromSrc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XpuReceiveBufferFromSrc;
  return proto.XpuReceiveBufferFromSrc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XpuReceiveBufferFromSrc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XpuReceiveBufferFromSrc}
 */
proto.XpuReceiveBufferFromSrc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSrcxpuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDstxpuid(value);
      break;
    case 3:
      var value = new proto.XpuReceiveBufferFromSrc.Buffer;
      reader.readMessage(value,proto.XpuReceiveBufferFromSrc.Buffer.deserializeBinaryFromReader);
      msg.addBuffers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XpuReceiveBufferFromSrc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XpuReceiveBufferFromSrc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XpuReceiveBufferFromSrc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuReceiveBufferFromSrc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcxpuid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getDstxpuid();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBuffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.XpuReceiveBufferFromSrc.Buffer.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.toObject = function(opt_includeInstance) {
  return proto.XpuReceiveBufferFromSrc.Buffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XpuReceiveBufferFromSrc.Buffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuReceiveBufferFromSrc.Buffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    length: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XpuReceiveBufferFromSrc.Buffer}
 */
proto.XpuReceiveBufferFromSrc.Buffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XpuReceiveBufferFromSrc.Buffer;
  return proto.XpuReceiveBufferFromSrc.Buffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XpuReceiveBufferFromSrc.Buffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XpuReceiveBufferFromSrc.Buffer}
 */
proto.XpuReceiveBufferFromSrc.Buffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XpuReceiveBufferFromSrc.Buffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XpuReceiveBufferFromSrc.Buffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuReceiveBufferFromSrc.Buffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.XpuReceiveBufferFromSrc.Buffer} returns this
 */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 length = 2;
 * @return {number}
 */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.XpuReceiveBufferFromSrc.Buffer} returns this
 */
proto.XpuReceiveBufferFromSrc.Buffer.prototype.setLength = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 srcXpuId = 1;
 * @return {number}
 */
proto.XpuReceiveBufferFromSrc.prototype.getSrcxpuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.XpuReceiveBufferFromSrc} returns this
 */
proto.XpuReceiveBufferFromSrc.prototype.setSrcxpuid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 dstXpuId = 2;
 * @return {number}
 */
proto.XpuReceiveBufferFromSrc.prototype.getDstxpuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.XpuReceiveBufferFromSrc} returns this
 */
proto.XpuReceiveBufferFromSrc.prototype.setDstxpuid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Buffer buffers = 3;
 * @return {!Array<!proto.XpuReceiveBufferFromSrc.Buffer>}
 */
proto.XpuReceiveBufferFromSrc.prototype.getBuffersList = function() {
  return /** @type{!Array<!proto.XpuReceiveBufferFromSrc.Buffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.XpuReceiveBufferFromSrc.Buffer, 3));
};


/**
 * @param {!Array<!proto.XpuReceiveBufferFromSrc.Buffer>} value
 * @return {!proto.XpuReceiveBufferFromSrc} returns this
*/
proto.XpuReceiveBufferFromSrc.prototype.setBuffersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.XpuReceiveBufferFromSrc.Buffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.XpuReceiveBufferFromSrc.Buffer}
 */
proto.XpuReceiveBufferFromSrc.prototype.addBuffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.XpuReceiveBufferFromSrc.Buffer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.XpuReceiveBufferFromSrc} returns this
 */
proto.XpuReceiveBufferFromSrc.prototype.clearBuffersList = function() {
  return this.setBuffersList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ProtoChildRequest.oneofGroups_ = [[2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.ProtoChildRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  SHMPTR: 2,
  PCBUF: 3,
  CHILDEVAL: 4,
  APPSTART: 5,
  RECVBUFFERFROMSRC: 6,
  CHILDUDFINIT: 7
};

/**
 * @return {proto.ProtoChildRequest.PayloadCase}
 */
proto.ProtoChildRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.ProtoChildRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ProtoChildRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoChildRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoChildRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoChildRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoChildRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    func: jspb.Message.getFieldWithDefault(msg, 1, 0),
    shmptr: (f = msg.getShmptr()) && proto.ParentChildShmPtr.toObject(includeInstance, f),
    pcbuf: (f = msg.getPcbuf()) && proto.ParentChildBuf.toObject(includeInstance, f),
    childeval: (f = msg.getChildeval()) && proto.ChildEvalRequest.toObject(includeInstance, f),
    appstart: (f = msg.getAppstart()) && proto.ChildAppStartRequest.toObject(includeInstance, f),
    recvbufferfromsrc: (f = msg.getRecvbufferfromsrc()) && proto.XpuReceiveBufferFromSrc.toObject(includeInstance, f),
    childudfinit: (f = msg.getChildudfinit()) && proto.ChildUdfInitRequest.toObject(includeInstance, f),
    txn: (f = msg.getTxn()) && proto.ProtoTxn.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoChildRequest}
 */
proto.ProtoChildRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoChildRequest;
  return proto.ProtoChildRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoChildRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoChildRequest}
 */
proto.ProtoChildRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ProtoChildFunc} */ (reader.readEnum());
      msg.setFunc(value);
      break;
    case 2:
      var value = new proto.ParentChildShmPtr;
      reader.readMessage(value,proto.ParentChildShmPtr.deserializeBinaryFromReader);
      msg.setShmptr(value);
      break;
    case 3:
      var value = new proto.ParentChildBuf;
      reader.readMessage(value,proto.ParentChildBuf.deserializeBinaryFromReader);
      msg.setPcbuf(value);
      break;
    case 4:
      var value = new proto.ChildEvalRequest;
      reader.readMessage(value,proto.ChildEvalRequest.deserializeBinaryFromReader);
      msg.setChildeval(value);
      break;
    case 5:
      var value = new proto.ChildAppStartRequest;
      reader.readMessage(value,proto.ChildAppStartRequest.deserializeBinaryFromReader);
      msg.setAppstart(value);
      break;
    case 6:
      var value = new proto.XpuReceiveBufferFromSrc;
      reader.readMessage(value,proto.XpuReceiveBufferFromSrc.deserializeBinaryFromReader);
      msg.setRecvbufferfromsrc(value);
      break;
    case 7:
      var value = new proto.ChildUdfInitRequest;
      reader.readMessage(value,proto.ChildUdfInitRequest.deserializeBinaryFromReader);
      msg.setChildudfinit(value);
      break;
    case 8:
      var value = new proto.ProtoTxn;
      reader.readMessage(value,proto.ProtoTxn.deserializeBinaryFromReader);
      msg.setTxn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoChildRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoChildRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoChildRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoChildRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFunc();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getShmptr();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ParentChildShmPtr.serializeBinaryToWriter
    );
  }
  f = message.getPcbuf();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ParentChildBuf.serializeBinaryToWriter
    );
  }
  f = message.getChildeval();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ChildEvalRequest.serializeBinaryToWriter
    );
  }
  f = message.getAppstart();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ChildAppStartRequest.serializeBinaryToWriter
    );
  }
  f = message.getRecvbufferfromsrc();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.XpuReceiveBufferFromSrc.serializeBinaryToWriter
    );
  }
  f = message.getChildudfinit();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ChildUdfInitRequest.serializeBinaryToWriter
    );
  }
  f = message.getTxn();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ProtoTxn.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoChildFunc func = 1;
 * @return {!proto.ProtoChildFunc}
 */
proto.ProtoChildRequest.prototype.getFunc = function() {
  return /** @type {!proto.ProtoChildFunc} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ProtoChildFunc} value
 * @return {!proto.ProtoChildRequest} returns this
 */
proto.ProtoChildRequest.prototype.setFunc = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ParentChildShmPtr shmPtr = 2;
 * @return {?proto.ParentChildShmPtr}
 */
proto.ProtoChildRequest.prototype.getShmptr = function() {
  return /** @type{?proto.ParentChildShmPtr} */ (
    jspb.Message.getWrapperField(this, proto.ParentChildShmPtr, 2));
};


/**
 * @param {?proto.ParentChildShmPtr|undefined} value
 * @return {!proto.ProtoChildRequest} returns this
*/
proto.ProtoChildRequest.prototype.setShmptr = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ProtoChildRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoChildRequest} returns this
 */
proto.ProtoChildRequest.prototype.clearShmptr = function() {
  return this.setShmptr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoChildRequest.prototype.hasShmptr = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ParentChildBuf pcBuf = 3;
 * @return {?proto.ParentChildBuf}
 */
proto.ProtoChildRequest.prototype.getPcbuf = function() {
  return /** @type{?proto.ParentChildBuf} */ (
    jspb.Message.getWrapperField(this, proto.ParentChildBuf, 3));
};


/**
 * @param {?proto.ParentChildBuf|undefined} value
 * @return {!proto.ProtoChildRequest} returns this
*/
proto.ProtoChildRequest.prototype.setPcbuf = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.ProtoChildRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoChildRequest} returns this
 */
proto.ProtoChildRequest.prototype.clearPcbuf = function() {
  return this.setPcbuf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoChildRequest.prototype.hasPcbuf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ChildEvalRequest childEval = 4;
 * @return {?proto.ChildEvalRequest}
 */
proto.ProtoChildRequest.prototype.getChildeval = function() {
  return /** @type{?proto.ChildEvalRequest} */ (
    jspb.Message.getWrapperField(this, proto.ChildEvalRequest, 4));
};


/**
 * @param {?proto.ChildEvalRequest|undefined} value
 * @return {!proto.ProtoChildRequest} returns this
*/
proto.ProtoChildRequest.prototype.setChildeval = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.ProtoChildRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoChildRequest} returns this
 */
proto.ProtoChildRequest.prototype.clearChildeval = function() {
  return this.setChildeval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoChildRequest.prototype.hasChildeval = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ChildAppStartRequest appStart = 5;
 * @return {?proto.ChildAppStartRequest}
 */
proto.ProtoChildRequest.prototype.getAppstart = function() {
  return /** @type{?proto.ChildAppStartRequest} */ (
    jspb.Message.getWrapperField(this, proto.ChildAppStartRequest, 5));
};


/**
 * @param {?proto.ChildAppStartRequest|undefined} value
 * @return {!proto.ProtoChildRequest} returns this
*/
proto.ProtoChildRequest.prototype.setAppstart = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.ProtoChildRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoChildRequest} returns this
 */
proto.ProtoChildRequest.prototype.clearAppstart = function() {
  return this.setAppstart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoChildRequest.prototype.hasAppstart = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional XpuReceiveBufferFromSrc recvBufferFromSrc = 6;
 * @return {?proto.XpuReceiveBufferFromSrc}
 */
proto.ProtoChildRequest.prototype.getRecvbufferfromsrc = function() {
  return /** @type{?proto.XpuReceiveBufferFromSrc} */ (
    jspb.Message.getWrapperField(this, proto.XpuReceiveBufferFromSrc, 6));
};


/**
 * @param {?proto.XpuReceiveBufferFromSrc|undefined} value
 * @return {!proto.ProtoChildRequest} returns this
*/
proto.ProtoChildRequest.prototype.setRecvbufferfromsrc = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.ProtoChildRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoChildRequest} returns this
 */
proto.ProtoChildRequest.prototype.clearRecvbufferfromsrc = function() {
  return this.setRecvbufferfromsrc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoChildRequest.prototype.hasRecvbufferfromsrc = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ChildUdfInitRequest childUdfInit = 7;
 * @return {?proto.ChildUdfInitRequest}
 */
proto.ProtoChildRequest.prototype.getChildudfinit = function() {
  return /** @type{?proto.ChildUdfInitRequest} */ (
    jspb.Message.getWrapperField(this, proto.ChildUdfInitRequest, 7));
};


/**
 * @param {?proto.ChildUdfInitRequest|undefined} value
 * @return {!proto.ProtoChildRequest} returns this
*/
proto.ProtoChildRequest.prototype.setChildudfinit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.ProtoChildRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoChildRequest} returns this
 */
proto.ProtoChildRequest.prototype.clearChildudfinit = function() {
  return this.setChildudfinit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoChildRequest.prototype.hasChildudfinit = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ProtoTxn txn = 8;
 * @return {?proto.ProtoTxn}
 */
proto.ProtoChildRequest.prototype.getTxn = function() {
  return /** @type{?proto.ProtoTxn} */ (
    jspb.Message.getWrapperField(this, proto.ProtoTxn, 8));
};


/**
 * @param {?proto.ProtoTxn|undefined} value
 * @return {!proto.ProtoChildRequest} returns this
*/
proto.ProtoChildRequest.prototype.setTxn = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoChildRequest} returns this
 */
proto.ProtoChildRequest.prototype.clearTxn = function() {
  return this.setTxn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoChildRequest.prototype.hasTxn = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppGetOutputBuffersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppGetOutputBuffersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppGetOutputBuffersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppGetOutputBuffersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    numbuffers: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppGetOutputBuffersRequest}
 */
proto.ParentAppGetOutputBuffersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppGetOutputBuffersRequest;
  return proto.ParentAppGetOutputBuffersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppGetOutputBuffersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppGetOutputBuffersRequest}
 */
proto.ParentAppGetOutputBuffersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumbuffers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppGetOutputBuffersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppGetOutputBuffersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppGetOutputBuffersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppGetOutputBuffersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumbuffers();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 numBuffers = 1;
 * @return {number}
 */
proto.ParentAppGetOutputBuffersRequest.prototype.getNumbuffers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentAppGetOutputBuffersRequest} returns this
 */
proto.ParentAppGetOutputBuffersRequest.prototype.setNumbuffers = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppDoneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppDoneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppDoneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppDoneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    outstr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    errstr: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppDoneRequest}
 */
proto.ParentAppDoneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppDoneRequest;
  return proto.ParentAppDoneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppDoneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppDoneRequest}
 */
proto.ParentAppDoneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutstr(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrstr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppDoneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppDoneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppDoneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppDoneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOutstr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getErrstr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 status = 1;
 * @return {number}
 */
proto.ParentAppDoneRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentAppDoneRequest} returns this
 */
proto.ParentAppDoneRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string outStr = 2;
 * @return {string}
 */
proto.ParentAppDoneRequest.prototype.getOutstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ParentAppDoneRequest} returns this
 */
proto.ParentAppDoneRequest.prototype.setOutstr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string errStr = 3;
 * @return {string}
 */
proto.ParentAppDoneRequest.prototype.getErrstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ParentAppDoneRequest} returns this
 */
proto.ParentAppDoneRequest.prototype.setErrstr = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentReportNumFilesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentReportNumFilesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentReportNumFilesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentReportNumFilesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filessampled: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalfilebytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
    downsampled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentReportNumFilesRequest}
 */
proto.ParentReportNumFilesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentReportNumFilesRequest;
  return proto.ParentReportNumFilesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentReportNumFilesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentReportNumFilesRequest}
 */
proto.ParentReportNumFilesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFilessampled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalfilebytes(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDownsampled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentReportNumFilesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentReportNumFilesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentReportNumFilesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentReportNumFilesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilessampled();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTotalfilebytes();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDownsampled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 filesSampled = 1;
 * @return {number}
 */
proto.ParentReportNumFilesRequest.prototype.getFilessampled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentReportNumFilesRequest} returns this
 */
proto.ParentReportNumFilesRequest.prototype.setFilessampled = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 totalFileBytes = 2;
 * @return {number}
 */
proto.ParentReportNumFilesRequest.prototype.getTotalfilebytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentReportNumFilesRequest} returns this
 */
proto.ParentReportNumFilesRequest.prototype.setTotalfilebytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool downSampled = 3;
 * @return {boolean}
 */
proto.ParentReportNumFilesRequest.prototype.getDownsampled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ParentReportNumFilesRequest} returns this
 */
proto.ParentReportNumFilesRequest.prototype.setDownsampled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ParentAppLoadBufferRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppLoadBufferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppLoadBufferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppLoadBufferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    numfiles: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numfilebytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
    numerrors: jspb.Message.getFieldWithDefault(msg, 3, 0),
    databuffersList: jspb.Message.toObjectList(msg.getDatabuffersList(),
    proto.ParentAppLoadBufferRequest.DataBuffer.toObject, includeInstance),
    unusedbuffersList: jspb.Message.toObjectList(msg.getUnusedbuffersList(),
    proto.ParentAppLoadBufferRequest.Buffer.toObject, includeInstance),
    fixedschema: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppLoadBufferRequest}
 */
proto.ParentAppLoadBufferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppLoadBufferRequest;
  return proto.ParentAppLoadBufferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppLoadBufferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppLoadBufferRequest}
 */
proto.ParentAppLoadBufferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumfiles(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumfilebytes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumerrors(value);
      break;
    case 4:
      var value = new proto.ParentAppLoadBufferRequest.DataBuffer;
      reader.readMessage(value,proto.ParentAppLoadBufferRequest.DataBuffer.deserializeBinaryFromReader);
      msg.addDatabuffers(value);
      break;
    case 5:
      var value = new proto.ParentAppLoadBufferRequest.Buffer;
      reader.readMessage(value,proto.ParentAppLoadBufferRequest.Buffer.deserializeBinaryFromReader);
      msg.addUnusedbuffers(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFixedschema(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppLoadBufferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppLoadBufferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppLoadBufferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumfiles();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNumfilebytes();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNumerrors();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDatabuffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ParentAppLoadBufferRequest.DataBuffer.serializeBinaryToWriter
    );
  }
  f = message.getUnusedbuffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ParentAppLoadBufferRequest.Buffer.serializeBinaryToWriter
    );
  }
  f = message.getFixedschema();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppLoadBufferRequest.Buffer.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppLoadBufferRequest.Buffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppLoadBufferRequest.Buffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.Buffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppLoadBufferRequest.Buffer}
 */
proto.ParentAppLoadBufferRequest.Buffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppLoadBufferRequest.Buffer;
  return proto.ParentAppLoadBufferRequest.Buffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppLoadBufferRequest.Buffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppLoadBufferRequest.Buffer}
 */
proto.ParentAppLoadBufferRequest.Buffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppLoadBufferRequest.Buffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppLoadBufferRequest.Buffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppLoadBufferRequest.Buffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.Buffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.ParentAppLoadBufferRequest.Buffer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentAppLoadBufferRequest.Buffer} returns this
 */
proto.ParentAppLoadBufferRequest.Buffer.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppLoadBufferRequest.DataBuffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppLoadBufferRequest.DataBuffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.DataBuffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    haserrors: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    buffer: (f = msg.getBuffer()) && proto.ParentAppLoadBufferRequest.Buffer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppLoadBufferRequest.DataBuffer}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppLoadBufferRequest.DataBuffer;
  return proto.ParentAppLoadBufferRequest.DataBuffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppLoadBufferRequest.DataBuffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppLoadBufferRequest.DataBuffer}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHaserrors(value);
      break;
    case 2:
      var value = new proto.ParentAppLoadBufferRequest.Buffer;
      reader.readMessage(value,proto.ParentAppLoadBufferRequest.Buffer.deserializeBinaryFromReader);
      msg.setBuffer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppLoadBufferRequest.DataBuffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppLoadBufferRequest.DataBuffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppLoadBufferRequest.DataBuffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHaserrors();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getBuffer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ParentAppLoadBufferRequest.Buffer.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool hasErrors = 1;
 * @return {boolean}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.getHaserrors = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ParentAppLoadBufferRequest.DataBuffer} returns this
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.setHaserrors = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional Buffer buffer = 2;
 * @return {?proto.ParentAppLoadBufferRequest.Buffer}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.getBuffer = function() {
  return /** @type{?proto.ParentAppLoadBufferRequest.Buffer} */ (
    jspb.Message.getWrapperField(this, proto.ParentAppLoadBufferRequest.Buffer, 2));
};


/**
 * @param {?proto.ParentAppLoadBufferRequest.Buffer|undefined} value
 * @return {!proto.ParentAppLoadBufferRequest.DataBuffer} returns this
*/
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.setBuffer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ParentAppLoadBufferRequest.DataBuffer} returns this
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.clearBuffer = function() {
  return this.setBuffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ParentAppLoadBufferRequest.DataBuffer.prototype.hasBuffer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 numFiles = 1;
 * @return {number}
 */
proto.ParentAppLoadBufferRequest.prototype.getNumfiles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentAppLoadBufferRequest} returns this
 */
proto.ParentAppLoadBufferRequest.prototype.setNumfiles = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 numFileBytes = 2;
 * @return {number}
 */
proto.ParentAppLoadBufferRequest.prototype.getNumfilebytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentAppLoadBufferRequest} returns this
 */
proto.ParentAppLoadBufferRequest.prototype.setNumfilebytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 numErrors = 3;
 * @return {number}
 */
proto.ParentAppLoadBufferRequest.prototype.getNumerrors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentAppLoadBufferRequest} returns this
 */
proto.ParentAppLoadBufferRequest.prototype.setNumerrors = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated DataBuffer dataBuffers = 4;
 * @return {!Array<!proto.ParentAppLoadBufferRequest.DataBuffer>}
 */
proto.ParentAppLoadBufferRequest.prototype.getDatabuffersList = function() {
  return /** @type{!Array<!proto.ParentAppLoadBufferRequest.DataBuffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ParentAppLoadBufferRequest.DataBuffer, 4));
};


/**
 * @param {!Array<!proto.ParentAppLoadBufferRequest.DataBuffer>} value
 * @return {!proto.ParentAppLoadBufferRequest} returns this
*/
proto.ParentAppLoadBufferRequest.prototype.setDatabuffersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ParentAppLoadBufferRequest.DataBuffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ParentAppLoadBufferRequest.DataBuffer}
 */
proto.ParentAppLoadBufferRequest.prototype.addDatabuffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ParentAppLoadBufferRequest.DataBuffer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ParentAppLoadBufferRequest} returns this
 */
proto.ParentAppLoadBufferRequest.prototype.clearDatabuffersList = function() {
  return this.setDatabuffersList([]);
};


/**
 * repeated Buffer unusedBuffers = 5;
 * @return {!Array<!proto.ParentAppLoadBufferRequest.Buffer>}
 */
proto.ParentAppLoadBufferRequest.prototype.getUnusedbuffersList = function() {
  return /** @type{!Array<!proto.ParentAppLoadBufferRequest.Buffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ParentAppLoadBufferRequest.Buffer, 5));
};


/**
 * @param {!Array<!proto.ParentAppLoadBufferRequest.Buffer>} value
 * @return {!proto.ParentAppLoadBufferRequest} returns this
*/
proto.ParentAppLoadBufferRequest.prototype.setUnusedbuffersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ParentAppLoadBufferRequest.Buffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ParentAppLoadBufferRequest.Buffer}
 */
proto.ParentAppLoadBufferRequest.prototype.addUnusedbuffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ParentAppLoadBufferRequest.Buffer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ParentAppLoadBufferRequest} returns this
 */
proto.ParentAppLoadBufferRequest.prototype.clearUnusedbuffersList = function() {
  return this.setUnusedbuffersList([]);
};


/**
 * optional bool fixedSchema = 6;
 * @return {boolean}
 */
proto.ParentAppLoadBufferRequest.prototype.getFixedschema = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ParentAppLoadBufferRequest} returns this
 */
proto.ParentAppLoadBufferRequest.prototype.setFixedschema = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XpuSendListToDsts.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XpuSendListToDsts.prototype.toObject = function(opt_includeInstance) {
  return proto.XpuSendListToDsts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XpuSendListToDsts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcxpuid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sendlistList: jspb.Message.toObjectList(msg.getSendlistList(),
    proto.XpuSendListToDsts.XpuSendListBufferToDst.toObject, includeInstance),
    unusedlistList: jspb.Message.toObjectList(msg.getUnusedlistList(),
    proto.XpuSendListToDsts.Buffer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XpuSendListToDsts}
 */
proto.XpuSendListToDsts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XpuSendListToDsts;
  return proto.XpuSendListToDsts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XpuSendListToDsts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XpuSendListToDsts}
 */
proto.XpuSendListToDsts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSrcxpuid(value);
      break;
    case 2:
      var value = new proto.XpuSendListToDsts.XpuSendListBufferToDst;
      reader.readMessage(value,proto.XpuSendListToDsts.XpuSendListBufferToDst.deserializeBinaryFromReader);
      msg.addSendlist(value);
      break;
    case 3:
      var value = new proto.XpuSendListToDsts.Buffer;
      reader.readMessage(value,proto.XpuSendListToDsts.Buffer.deserializeBinaryFromReader);
      msg.addUnusedlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XpuSendListToDsts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XpuSendListToDsts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XpuSendListToDsts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcxpuid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSendlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.XpuSendListToDsts.XpuSendListBufferToDst.serializeBinaryToWriter
    );
  }
  f = message.getUnusedlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.XpuSendListToDsts.Buffer.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XpuSendListToDsts.Buffer.prototype.toObject = function(opt_includeInstance) {
  return proto.XpuSendListToDsts.Buffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XpuSendListToDsts.Buffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.Buffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XpuSendListToDsts.Buffer}
 */
proto.XpuSendListToDsts.Buffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XpuSendListToDsts.Buffer;
  return proto.XpuSendListToDsts.Buffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XpuSendListToDsts.Buffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XpuSendListToDsts.Buffer}
 */
proto.XpuSendListToDsts.Buffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XpuSendListToDsts.Buffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XpuSendListToDsts.Buffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XpuSendListToDsts.Buffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.Buffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.XpuSendListToDsts.Buffer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.XpuSendListToDsts.Buffer} returns this
 */
proto.XpuSendListToDsts.Buffer.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.toObject = function(opt_includeInstance) {
  return proto.XpuSendListToDsts.XpuSendListBufferToDst.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.toObject = function(includeInstance, msg) {
  var f, obj = {
    dstxpuid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    buffersList: jspb.Message.toObjectList(msg.getBuffersList(),
    proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XpuSendListToDsts.XpuSendListBufferToDst;
  return proto.XpuSendListToDsts.XpuSendListBufferToDst.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDstxpuid(value);
      break;
    case 2:
      var value = new proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer;
      reader.readMessage(value,proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.deserializeBinaryFromReader);
      msg.addBuffers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XpuSendListToDsts.XpuSendListBufferToDst.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDstxpuid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBuffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.toObject = function(opt_includeInstance) {
  return proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    length: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer;
  return proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer} returns this
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 length = 2;
 * @return {number}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer} returns this
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer.prototype.setLength = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 dstXpuId = 1;
 * @return {number}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.getDstxpuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst} returns this
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.setDstxpuid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Buffer buffers = 2;
 * @return {!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer>}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.getBuffersList = function() {
  return /** @type{!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer, 2));
};


/**
 * @param {!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer>} value
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst} returns this
*/
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.setBuffersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer}
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.addBuffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.XpuSendListToDsts.XpuSendListBufferToDst.Buffer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst} returns this
 */
proto.XpuSendListToDsts.XpuSendListBufferToDst.prototype.clearBuffersList = function() {
  return this.setBuffersList([]);
};


/**
 * optional uint32 srcXpuId = 1;
 * @return {number}
 */
proto.XpuSendListToDsts.prototype.getSrcxpuid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.XpuSendListToDsts} returns this
 */
proto.XpuSendListToDsts.prototype.setSrcxpuid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated XpuSendListBufferToDst sendList = 2;
 * @return {!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst>}
 */
proto.XpuSendListToDsts.prototype.getSendlistList = function() {
  return /** @type{!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.XpuSendListToDsts.XpuSendListBufferToDst, 2));
};


/**
 * @param {!Array<!proto.XpuSendListToDsts.XpuSendListBufferToDst>} value
 * @return {!proto.XpuSendListToDsts} returns this
*/
proto.XpuSendListToDsts.prototype.setSendlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.XpuSendListToDsts.XpuSendListBufferToDst=} opt_value
 * @param {number=} opt_index
 * @return {!proto.XpuSendListToDsts.XpuSendListBufferToDst}
 */
proto.XpuSendListToDsts.prototype.addSendlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.XpuSendListToDsts.XpuSendListBufferToDst, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.XpuSendListToDsts} returns this
 */
proto.XpuSendListToDsts.prototype.clearSendlistList = function() {
  return this.setSendlistList([]);
};


/**
 * repeated Buffer unusedList = 3;
 * @return {!Array<!proto.XpuSendListToDsts.Buffer>}
 */
proto.XpuSendListToDsts.prototype.getUnusedlistList = function() {
  return /** @type{!Array<!proto.XpuSendListToDsts.Buffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.XpuSendListToDsts.Buffer, 3));
};


/**
 * @param {!Array<!proto.XpuSendListToDsts.Buffer>} value
 * @return {!proto.XpuSendListToDsts} returns this
*/
proto.XpuSendListToDsts.prototype.setUnusedlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.XpuSendListToDsts.Buffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.XpuSendListToDsts.Buffer}
 */
proto.XpuSendListToDsts.prototype.addUnusedlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.XpuSendListToDsts.Buffer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.XpuSendListToDsts} returns this
 */
proto.XpuSendListToDsts.prototype.clearUnusedlistList = function() {
  return this.setUnusedlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentReportFileErrorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentReportFileErrorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentReportFileErrorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentReportFileErrorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fileerror: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentReportFileErrorRequest}
 */
proto.ParentReportFileErrorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentReportFileErrorRequest;
  return proto.ParentReportFileErrorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentReportFileErrorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentReportFileErrorRequest}
 */
proto.ParentReportFileErrorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileerror(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentReportFileErrorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentReportFileErrorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentReportFileErrorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentReportFileErrorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFileerror();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string fileName = 1;
 * @return {string}
 */
proto.ParentReportFileErrorRequest.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ParentReportFileErrorRequest} returns this
 */
proto.ParentReportFileErrorRequest.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fileError = 2;
 * @return {string}
 */
proto.ParentReportFileErrorRequest.prototype.getFileerror = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ParentReportFileErrorRequest} returns this
 */
proto.ParentReportFileErrorRequest.prototype.setFileerror = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbGetMetaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbGetMetaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbGetMetaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetMetaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    xdbid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbGetMetaRequest}
 */
proto.XdbGetMetaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbGetMetaRequest;
  return proto.XdbGetMetaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbGetMetaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbGetMetaRequest}
 */
proto.XdbGetMetaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setXdbid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbGetMetaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbGetMetaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbGetMetaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetMetaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXdbid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 xdbId = 1;
 * @return {number}
 */
proto.XdbGetMetaRequest.prototype.getXdbid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.XdbGetMetaRequest} returns this
 */
proto.XdbGetMetaRequest.prototype.setXdbid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbColumnDesc.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbColumnDesc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbColumnDesc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbColumnDesc.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbColumnDesc}
 */
proto.XdbColumnDesc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbColumnDesc;
  return proto.XdbColumnDesc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbColumnDesc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbColumnDesc}
 */
proto.XdbColumnDesc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbColumnDesc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbColumnDesc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbColumnDesc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbColumnDesc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.XdbColumnDesc.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.XdbColumnDesc} returns this
 */
proto.XdbColumnDesc.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.XdbColumnDesc.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.XdbColumnDesc} returns this
 */
proto.XdbColumnDesc.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XdbGetMetaResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbGetMetaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbGetMetaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbGetMetaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetMetaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    xdbid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numrowspernodeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.XdbColumnDesc.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbGetMetaResponse}
 */
proto.XdbGetMetaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbGetMetaResponse;
  return proto.XdbGetMetaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbGetMetaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbGetMetaResponse}
 */
proto.XdbGetMetaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setXdbid(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setNumrowspernodeList(value);
      break;
    case 3:
      var value = new proto.XdbColumnDesc;
      reader.readMessage(value,proto.XdbColumnDesc.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbGetMetaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbGetMetaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbGetMetaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetMetaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXdbid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNumrowspernodeList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.XdbColumnDesc.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 xdbId = 1;
 * @return {number}
 */
proto.XdbGetMetaResponse.prototype.getXdbid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.XdbGetMetaResponse} returns this
 */
proto.XdbGetMetaResponse.prototype.setXdbid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated int64 numRowsPerNode = 2;
 * @return {!Array<number>}
 */
proto.XdbGetMetaResponse.prototype.getNumrowspernodeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.XdbGetMetaResponse} returns this
 */
proto.XdbGetMetaResponse.prototype.setNumrowspernodeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.XdbGetMetaResponse} returns this
 */
proto.XdbGetMetaResponse.prototype.addNumrowspernode = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.XdbGetMetaResponse} returns this
 */
proto.XdbGetMetaResponse.prototype.clearNumrowspernodeList = function() {
  return this.setNumrowspernodeList([]);
};


/**
 * repeated XdbColumnDesc columns = 3;
 * @return {!Array<!proto.XdbColumnDesc>}
 */
proto.XdbGetMetaResponse.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.XdbColumnDesc>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.XdbColumnDesc, 3));
};


/**
 * @param {!Array<!proto.XdbColumnDesc>} value
 * @return {!proto.XdbGetMetaResponse} returns this
*/
proto.XdbGetMetaResponse.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.XdbColumnDesc=} opt_value
 * @param {number=} opt_index
 * @return {!proto.XdbColumnDesc}
 */
proto.XdbGetMetaResponse.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.XdbColumnDesc, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.XdbGetMetaResponse} returns this
 */
proto.XdbGetMetaResponse.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XdbGetLocalRowsRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbGetLocalRowsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbGetLocalRowsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbGetLocalRowsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    xdbid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startrow: jspb.Message.getFieldWithDefault(msg, 2, 0),
    numrows: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nodeid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    asdatapage: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    columnsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbGetLocalRowsRequest}
 */
proto.XdbGetLocalRowsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbGetLocalRowsRequest;
  return proto.XdbGetLocalRowsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbGetLocalRowsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbGetLocalRowsRequest}
 */
proto.XdbGetLocalRowsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setXdbid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartrow(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumrows(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeid(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAsdatapage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addColumns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbGetLocalRowsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbGetLocalRowsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbGetLocalRowsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXdbid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStartrow();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNumrows();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNodeid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getAsdatapage();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional int64 xdbId = 1;
 * @return {number}
 */
proto.XdbGetLocalRowsRequest.prototype.getXdbid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.XdbGetLocalRowsRequest} returns this
 */
proto.XdbGetLocalRowsRequest.prototype.setXdbid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 startRow = 2;
 * @return {number}
 */
proto.XdbGetLocalRowsRequest.prototype.getStartrow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.XdbGetLocalRowsRequest} returns this
 */
proto.XdbGetLocalRowsRequest.prototype.setStartrow = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 numRows = 3;
 * @return {number}
 */
proto.XdbGetLocalRowsRequest.prototype.getNumrows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.XdbGetLocalRowsRequest} returns this
 */
proto.XdbGetLocalRowsRequest.prototype.setNumrows = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 nodeId = 4;
 * @return {number}
 */
proto.XdbGetLocalRowsRequest.prototype.getNodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.XdbGetLocalRowsRequest} returns this
 */
proto.XdbGetLocalRowsRequest.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool asDataPage = 5;
 * @return {boolean}
 */
proto.XdbGetLocalRowsRequest.prototype.getAsdatapage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.XdbGetLocalRowsRequest} returns this
 */
proto.XdbGetLocalRowsRequest.prototype.setAsdatapage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated string columns = 6;
 * @return {!Array<string>}
 */
proto.XdbGetLocalRowsRequest.prototype.getColumnsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.XdbGetLocalRowsRequest} returns this
 */
proto.XdbGetLocalRowsRequest.prototype.setColumnsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.XdbGetLocalRowsRequest} returns this
 */
proto.XdbGetLocalRowsRequest.prototype.addColumns = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.XdbGetLocalRowsRequest} returns this
 */
proto.XdbGetLocalRowsRequest.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.XdbGetLocalRowsResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.XdbGetLocalRowsResponse.DataCase = {
  DATA_NOT_SET: 0,
  DATAPAGE: 1,
  ROWS: 2
};

/**
 * @return {proto.XdbGetLocalRowsResponse.DataCase}
 */
proto.XdbGetLocalRowsResponse.prototype.getDataCase = function() {
  return /** @type {proto.XdbGetLocalRowsResponse.DataCase} */(jspb.Message.computeOneofCase(this, proto.XdbGetLocalRowsResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbGetLocalRowsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbGetLocalRowsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbGetLocalRowsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    datapage: msg.getDatapage_asB64(),
    rows: (f = msg.getRows()) && proto.XdbGetLocalRowsResponse.RowBatch.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbGetLocalRowsResponse}
 */
proto.XdbGetLocalRowsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbGetLocalRowsResponse;
  return proto.XdbGetLocalRowsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbGetLocalRowsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbGetLocalRowsResponse}
 */
proto.XdbGetLocalRowsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDatapage(value);
      break;
    case 2:
      var value = new proto.XdbGetLocalRowsResponse.RowBatch;
      reader.readMessage(value,proto.XdbGetLocalRowsResponse.RowBatch.deserializeBinaryFromReader);
      msg.setRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbGetLocalRowsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbGetLocalRowsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbGetLocalRowsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getRows();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.XdbGetLocalRowsResponse.RowBatch.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.XdbGetLocalRowsResponse.RowBatch.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.XdbGetLocalRowsResponse.RowBatch.prototype.toObject = function(opt_includeInstance) {
  return proto.XdbGetLocalRowsResponse.RowBatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.XdbGetLocalRowsResponse.RowBatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsResponse.RowBatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.XdbGetLocalRowsResponse.RowBatch}
 */
proto.XdbGetLocalRowsResponse.RowBatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.XdbGetLocalRowsResponse.RowBatch;
  return proto.XdbGetLocalRowsResponse.RowBatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.XdbGetLocalRowsResponse.RowBatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.XdbGetLocalRowsResponse.RowBatch}
 */
proto.XdbGetLocalRowsResponse.RowBatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow;
      reader.readMessage(value,xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.XdbGetLocalRowsResponse.RowBatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.XdbGetLocalRowsResponse.RowBatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.XdbGetLocalRowsResponse.RowBatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.XdbGetLocalRowsResponse.RowBatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProtoRow rows = 1;
 * @return {!Array<!proto.ProtoRow>}
 */
proto.XdbGetLocalRowsResponse.RowBatch.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.ProtoRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, xcalar_compute_localtypes_ProtoFieldValue_pb.ProtoRow, 1));
};


/**
 * @param {!Array<!proto.ProtoRow>} value
 * @return {!proto.XdbGetLocalRowsResponse.RowBatch} returns this
*/
proto.XdbGetLocalRowsResponse.RowBatch.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ProtoRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ProtoRow}
 */
proto.XdbGetLocalRowsResponse.RowBatch.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ProtoRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.XdbGetLocalRowsResponse.RowBatch} returns this
 */
proto.XdbGetLocalRowsResponse.RowBatch.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * optional bytes dataPage = 1;
 * @return {!(string|Uint8Array)}
 */
proto.XdbGetLocalRowsResponse.prototype.getDatapage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes dataPage = 1;
 * This is a type-conversion wrapper around `getDatapage()`
 * @return {string}
 */
proto.XdbGetLocalRowsResponse.prototype.getDatapage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDatapage()));
};


/**
 * optional bytes dataPage = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDatapage()`
 * @return {!Uint8Array}
 */
proto.XdbGetLocalRowsResponse.prototype.getDatapage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDatapage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.XdbGetLocalRowsResponse} returns this
 */
proto.XdbGetLocalRowsResponse.prototype.setDatapage = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.XdbGetLocalRowsResponse.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.XdbGetLocalRowsResponse} returns this
 */
proto.XdbGetLocalRowsResponse.prototype.clearDatapage = function() {
  return jspb.Message.setOneofField(this, 1, proto.XdbGetLocalRowsResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.XdbGetLocalRowsResponse.prototype.hasDatapage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RowBatch rows = 2;
 * @return {?proto.XdbGetLocalRowsResponse.RowBatch}
 */
proto.XdbGetLocalRowsResponse.prototype.getRows = function() {
  return /** @type{?proto.XdbGetLocalRowsResponse.RowBatch} */ (
    jspb.Message.getWrapperField(this, proto.XdbGetLocalRowsResponse.RowBatch, 2));
};


/**
 * @param {?proto.XdbGetLocalRowsResponse.RowBatch|undefined} value
 * @return {!proto.XdbGetLocalRowsResponse} returns this
*/
proto.XdbGetLocalRowsResponse.prototype.setRows = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.XdbGetLocalRowsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.XdbGetLocalRowsResponse} returns this
 */
proto.XdbGetLocalRowsResponse.prototype.clearRows = function() {
  return this.setRows(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.XdbGetLocalRowsResponse.prototype.hasRows = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RuntimeHistogramsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.RuntimeHistogramsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RuntimeHistogramsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RuntimeHistogramsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RuntimeHistogramsRequest}
 */
proto.RuntimeHistogramsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RuntimeHistogramsRequest;
  return proto.RuntimeHistogramsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RuntimeHistogramsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RuntimeHistogramsRequest}
 */
proto.RuntimeHistogramsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RuntimeHistogramsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RuntimeHistogramsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RuntimeHistogramsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RuntimeHistogramsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RuntimeHistogramsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RuntimeHistogramsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.RuntimeHistogramsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RuntimeHistogramsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RuntimeHistogramsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    histogramsList: jspb.Message.toObjectList(msg.getHistogramsList(),
    proto.RuntimeHistogramsResponse.Histogram.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RuntimeHistogramsResponse}
 */
proto.RuntimeHistogramsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RuntimeHistogramsResponse;
  return proto.RuntimeHistogramsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RuntimeHistogramsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RuntimeHistogramsResponse}
 */
proto.RuntimeHistogramsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RuntimeHistogramsResponse.Histogram;
      reader.readMessage(value,proto.RuntimeHistogramsResponse.Histogram.deserializeBinaryFromReader);
      msg.addHistograms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RuntimeHistogramsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RuntimeHistogramsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RuntimeHistogramsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RuntimeHistogramsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHistogramsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RuntimeHistogramsResponse.Histogram.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RuntimeHistogramsResponse.Histogram.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RuntimeHistogramsResponse.Histogram.prototype.toObject = function(opt_includeInstance) {
  return proto.RuntimeHistogramsResponse.Histogram.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RuntimeHistogramsResponse.Histogram} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RuntimeHistogramsResponse.Histogram.toObject = function(includeInstance, msg) {
  var f, obj = {
    durationSec: jspb.Message.getFieldWithDefault(msg, 1, 0),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.RuntimeHistogramsResponse.Histogram.Item.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RuntimeHistogramsResponse.Histogram}
 */
proto.RuntimeHistogramsResponse.Histogram.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RuntimeHistogramsResponse.Histogram;
  return proto.RuntimeHistogramsResponse.Histogram.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RuntimeHistogramsResponse.Histogram} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RuntimeHistogramsResponse.Histogram}
 */
proto.RuntimeHistogramsResponse.Histogram.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDurationSec(value);
      break;
    case 2:
      var value = new proto.RuntimeHistogramsResponse.Histogram.Item;
      reader.readMessage(value,proto.RuntimeHistogramsResponse.Histogram.Item.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RuntimeHistogramsResponse.Histogram.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RuntimeHistogramsResponse.Histogram.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RuntimeHistogramsResponse.Histogram} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RuntimeHistogramsResponse.Histogram.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDurationSec();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.RuntimeHistogramsResponse.Histogram.Item.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.RuntimeHistogramsResponse.Histogram.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RuntimeHistogramsResponse.Histogram.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RuntimeHistogramsResponse.Histogram.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    meanSuspensions: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    meanSuspendedTimeUs: jspb.Message.getFieldWithDefault(msg, 4, 0),
    meanDurationUs: jspb.Message.getFieldWithDefault(msg, 5, 0),
    durationStddev: jspb.Message.getFieldWithDefault(msg, 6, 0),
    duration95thUs: jspb.Message.getFieldWithDefault(msg, 7, 0),
    duration99thUs: jspb.Message.getFieldWithDefault(msg, 8, 0),
    meanLockingTimeUs: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RuntimeHistogramsResponse.Histogram.Item;
  return proto.RuntimeHistogramsResponse.Histogram.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RuntimeHistogramsResponse.Histogram.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMeanSuspensions(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMeanSuspendedTimeUs(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMeanDurationUs(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDurationStddev(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration95thUs(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration99thUs(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMeanLockingTimeUs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RuntimeHistogramsResponse.Histogram.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RuntimeHistogramsResponse.Histogram.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RuntimeHistogramsResponse.Histogram.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMeanSuspensions();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getMeanSuspendedTimeUs();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMeanDurationUs();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getDurationStddev();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getDuration95thUs();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getDuration99thUs();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getMeanLockingTimeUs();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item} returns this
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 count = 2;
 * @return {number}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item} returns this
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double mean_suspensions = 3;
 * @return {number}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.getMeanSuspensions = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item} returns this
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.setMeanSuspensions = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int64 mean_suspended_time_us = 4;
 * @return {number}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.getMeanSuspendedTimeUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item} returns this
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.setMeanSuspendedTimeUs = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 mean_duration_us = 5;
 * @return {number}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.getMeanDurationUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item} returns this
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.setMeanDurationUs = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 duration_stddev = 6;
 * @return {number}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.getDurationStddev = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item} returns this
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.setDurationStddev = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 duration_95th_us = 7;
 * @return {number}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.getDuration95thUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item} returns this
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.setDuration95thUs = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 duration_99th_us = 8;
 * @return {number}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.getDuration99thUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item} returns this
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.setDuration99thUs = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 mean_locking_time_us = 9;
 * @return {number}
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.getMeanLockingTimeUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item} returns this
 */
proto.RuntimeHistogramsResponse.Histogram.Item.prototype.setMeanLockingTimeUs = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 duration_sec = 1;
 * @return {number}
 */
proto.RuntimeHistogramsResponse.Histogram.prototype.getDurationSec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.RuntimeHistogramsResponse.Histogram} returns this
 */
proto.RuntimeHistogramsResponse.Histogram.prototype.setDurationSec = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Item items = 2;
 * @return {!Array<!proto.RuntimeHistogramsResponse.Histogram.Item>}
 */
proto.RuntimeHistogramsResponse.Histogram.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.RuntimeHistogramsResponse.Histogram.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RuntimeHistogramsResponse.Histogram.Item, 2));
};


/**
 * @param {!Array<!proto.RuntimeHistogramsResponse.Histogram.Item>} value
 * @return {!proto.RuntimeHistogramsResponse.Histogram} returns this
*/
proto.RuntimeHistogramsResponse.Histogram.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.RuntimeHistogramsResponse.Histogram.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.RuntimeHistogramsResponse.Histogram.Item}
 */
proto.RuntimeHistogramsResponse.Histogram.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.RuntimeHistogramsResponse.Histogram.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.RuntimeHistogramsResponse.Histogram} returns this
 */
proto.RuntimeHistogramsResponse.Histogram.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * repeated Histogram histograms = 1;
 * @return {!Array<!proto.RuntimeHistogramsResponse.Histogram>}
 */
proto.RuntimeHistogramsResponse.prototype.getHistogramsList = function() {
  return /** @type{!Array<!proto.RuntimeHistogramsResponse.Histogram>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RuntimeHistogramsResponse.Histogram, 1));
};


/**
 * @param {!Array<!proto.RuntimeHistogramsResponse.Histogram>} value
 * @return {!proto.RuntimeHistogramsResponse} returns this
*/
proto.RuntimeHistogramsResponse.prototype.setHistogramsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.RuntimeHistogramsResponse.Histogram=} opt_value
 * @param {number=} opt_index
 * @return {!proto.RuntimeHistogramsResponse.Histogram}
 */
proto.RuntimeHistogramsResponse.prototype.addHistograms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.RuntimeHistogramsResponse.Histogram, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.RuntimeHistogramsResponse} returns this
 */
proto.RuntimeHistogramsResponse.prototype.clearHistogramsList = function() {
  return this.setHistogramsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ParentAppRequest.oneofGroups_ = [[1,2,3,4,5,6,7,8,9]];

/**
 * @enum {number}
 */
proto.ParentAppRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  GETBUFFERS: 1,
  DONE: 2,
  REPORTNUMFILES: 3,
  LOADBUFFERS: 4,
  FILEERROR: 5,
  SENDLISTTODSTS: 6,
  XDBGETMETA: 7,
  XDBGETLOCALROWS: 8,
  RUNTIMEHISTOGRAMS: 9
};

/**
 * @return {proto.ParentAppRequest.PayloadCase}
 */
proto.ParentAppRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.ParentAppRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ParentAppRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentAppRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentAppRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentAppRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    getbuffers: (f = msg.getGetbuffers()) && proto.ParentAppGetOutputBuffersRequest.toObject(includeInstance, f),
    done: (f = msg.getDone()) && proto.ParentAppDoneRequest.toObject(includeInstance, f),
    reportnumfiles: (f = msg.getReportnumfiles()) && proto.ParentReportNumFilesRequest.toObject(includeInstance, f),
    loadbuffers: (f = msg.getLoadbuffers()) && proto.ParentAppLoadBufferRequest.toObject(includeInstance, f),
    fileerror: (f = msg.getFileerror()) && proto.ParentReportFileErrorRequest.toObject(includeInstance, f),
    sendlisttodsts: (f = msg.getSendlisttodsts()) && proto.XpuSendListToDsts.toObject(includeInstance, f),
    xdbgetmeta: (f = msg.getXdbgetmeta()) && proto.XdbGetMetaRequest.toObject(includeInstance, f),
    xdbgetlocalrows: (f = msg.getXdbgetlocalrows()) && proto.XdbGetLocalRowsRequest.toObject(includeInstance, f),
    runtimehistograms: (f = msg.getRuntimehistograms()) && proto.RuntimeHistogramsRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentAppRequest}
 */
proto.ParentAppRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentAppRequest;
  return proto.ParentAppRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentAppRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentAppRequest}
 */
proto.ParentAppRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ParentAppGetOutputBuffersRequest;
      reader.readMessage(value,proto.ParentAppGetOutputBuffersRequest.deserializeBinaryFromReader);
      msg.setGetbuffers(value);
      break;
    case 2:
      var value = new proto.ParentAppDoneRequest;
      reader.readMessage(value,proto.ParentAppDoneRequest.deserializeBinaryFromReader);
      msg.setDone(value);
      break;
    case 3:
      var value = new proto.ParentReportNumFilesRequest;
      reader.readMessage(value,proto.ParentReportNumFilesRequest.deserializeBinaryFromReader);
      msg.setReportnumfiles(value);
      break;
    case 4:
      var value = new proto.ParentAppLoadBufferRequest;
      reader.readMessage(value,proto.ParentAppLoadBufferRequest.deserializeBinaryFromReader);
      msg.setLoadbuffers(value);
      break;
    case 5:
      var value = new proto.ParentReportFileErrorRequest;
      reader.readMessage(value,proto.ParentReportFileErrorRequest.deserializeBinaryFromReader);
      msg.setFileerror(value);
      break;
    case 6:
      var value = new proto.XpuSendListToDsts;
      reader.readMessage(value,proto.XpuSendListToDsts.deserializeBinaryFromReader);
      msg.setSendlisttodsts(value);
      break;
    case 7:
      var value = new proto.XdbGetMetaRequest;
      reader.readMessage(value,proto.XdbGetMetaRequest.deserializeBinaryFromReader);
      msg.setXdbgetmeta(value);
      break;
    case 8:
      var value = new proto.XdbGetLocalRowsRequest;
      reader.readMessage(value,proto.XdbGetLocalRowsRequest.deserializeBinaryFromReader);
      msg.setXdbgetlocalrows(value);
      break;
    case 9:
      var value = new proto.RuntimeHistogramsRequest;
      reader.readMessage(value,proto.RuntimeHistogramsRequest.deserializeBinaryFromReader);
      msg.setRuntimehistograms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentAppRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentAppRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentAppRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentAppRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGetbuffers();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ParentAppGetOutputBuffersRequest.serializeBinaryToWriter
    );
  }
  f = message.getDone();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ParentAppDoneRequest.serializeBinaryToWriter
    );
  }
  f = message.getReportnumfiles();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ParentReportNumFilesRequest.serializeBinaryToWriter
    );
  }
  f = message.getLoadbuffers();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ParentAppLoadBufferRequest.serializeBinaryToWriter
    );
  }
  f = message.getFileerror();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ParentReportFileErrorRequest.serializeBinaryToWriter
    );
  }
  f = message.getSendlisttodsts();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.XpuSendListToDsts.serializeBinaryToWriter
    );
  }
  f = message.getXdbgetmeta();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.XdbGetMetaRequest.serializeBinaryToWriter
    );
  }
  f = message.getXdbgetlocalrows();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.XdbGetLocalRowsRequest.serializeBinaryToWriter
    );
  }
  f = message.getRuntimehistograms();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.RuntimeHistogramsRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional ParentAppGetOutputBuffersRequest getBuffers = 1;
 * @return {?proto.ParentAppGetOutputBuffersRequest}
 */
proto.ParentAppRequest.prototype.getGetbuffers = function() {
  return /** @type{?proto.ParentAppGetOutputBuffersRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentAppGetOutputBuffersRequest, 1));
};


/**
 * @param {?proto.ParentAppGetOutputBuffersRequest|undefined} value
 * @return {!proto.ParentAppRequest} returns this
*/
proto.ParentAppRequest.prototype.setGetbuffers = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.ParentAppRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ParentAppRequest} returns this
 */
proto.ParentAppRequest.prototype.clearGetbuffers = function() {
  return this.setGetbuffers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ParentAppRequest.prototype.hasGetbuffers = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ParentAppDoneRequest done = 2;
 * @return {?proto.ParentAppDoneRequest}
 */
proto.ParentAppRequest.prototype.getDone = function() {
  return /** @type{?proto.ParentAppDoneRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentAppDoneRequest, 2));
};


/**
 * @param {?proto.ParentAppDoneRequest|undefined} value
 * @return {!proto.ParentAppRequest} returns this
*/
proto.ParentAppRequest.prototype.setDone = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ParentAppRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ParentAppRequest} returns this
 */
proto.ParentAppRequest.prototype.clearDone = function() {
  return this.setDone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ParentAppRequest.prototype.hasDone = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ParentReportNumFilesRequest reportNumFiles = 3;
 * @return {?proto.ParentReportNumFilesRequest}
 */
proto.ParentAppRequest.prototype.getReportnumfiles = function() {
  return /** @type{?proto.ParentReportNumFilesRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentReportNumFilesRequest, 3));
};


/**
 * @param {?proto.ParentReportNumFilesRequest|undefined} value
 * @return {!proto.ParentAppRequest} returns this
*/
proto.ParentAppRequest.prototype.setReportnumfiles = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.ParentAppRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ParentAppRequest} returns this
 */
proto.ParentAppRequest.prototype.clearReportnumfiles = function() {
  return this.setReportnumfiles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ParentAppRequest.prototype.hasReportnumfiles = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ParentAppLoadBufferRequest loadBuffers = 4;
 * @return {?proto.ParentAppLoadBufferRequest}
 */
proto.ParentAppRequest.prototype.getLoadbuffers = function() {
  return /** @type{?proto.ParentAppLoadBufferRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentAppLoadBufferRequest, 4));
};


/**
 * @param {?proto.ParentAppLoadBufferRequest|undefined} value
 * @return {!proto.ParentAppRequest} returns this
*/
proto.ParentAppRequest.prototype.setLoadbuffers = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.ParentAppRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ParentAppRequest} returns this
 */
proto.ParentAppRequest.prototype.clearLoadbuffers = function() {
  return this.setLoadbuffers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ParentAppRequest.prototype.hasLoadbuffers = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ParentReportFileErrorRequest fileError = 5;
 * @return {?proto.ParentReportFileErrorRequest}
 */
proto.ParentAppRequest.prototype.getFileerror = function() {
  return /** @type{?proto.ParentReportFileErrorRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentReportFileErrorRequest, 5));
};


/**
 * @param {?proto.ParentReportFileErrorRequest|undefined} value
 * @return {!proto.ParentAppRequest} returns this
*/
proto.ParentAppRequest.prototype.setFileerror = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.ParentAppRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ParentAppRequest} returns this
 */
proto.ParentAppRequest.prototype.clearFileerror = function() {
  return this.setFileerror(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ParentAppRequest.prototype.hasFileerror = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional XpuSendListToDsts sendListToDsts = 6;
 * @return {?proto.XpuSendListToDsts}
 */
proto.ParentAppRequest.prototype.getSendlisttodsts = function() {
  return /** @type{?proto.XpuSendListToDsts} */ (
    jspb.Message.getWrapperField(this, proto.XpuSendListToDsts, 6));
};


/**
 * @param {?proto.XpuSendListToDsts|undefined} value
 * @return {!proto.ParentAppRequest} returns this
*/
proto.ParentAppRequest.prototype.setSendlisttodsts = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.ParentAppRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ParentAppRequest} returns this
 */
proto.ParentAppRequest.prototype.clearSendlisttodsts = function() {
  return this.setSendlisttodsts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ParentAppRequest.prototype.hasSendlisttodsts = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional XdbGetMetaRequest xdbGetMeta = 7;
 * @return {?proto.XdbGetMetaRequest}
 */
proto.ParentAppRequest.prototype.getXdbgetmeta = function() {
  return /** @type{?proto.XdbGetMetaRequest} */ (
    jspb.Message.getWrapperField(this, proto.XdbGetMetaRequest, 7));
};


/**
 * @param {?proto.XdbGetMetaRequest|undefined} value
 * @return {!proto.ParentAppRequest} returns this
*/
proto.ParentAppRequest.prototype.setXdbgetmeta = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.ParentAppRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ParentAppRequest} returns this
 */
proto.ParentAppRequest.prototype.clearXdbgetmeta = function() {
  return this.setXdbgetmeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ParentAppRequest.prototype.hasXdbgetmeta = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional XdbGetLocalRowsRequest xdbGetLocalRows = 8;
 * @return {?proto.XdbGetLocalRowsRequest}
 */
proto.ParentAppRequest.prototype.getXdbgetlocalrows = function() {
  return /** @type{?proto.XdbGetLocalRowsRequest} */ (
    jspb.Message.getWrapperField(this, proto.XdbGetLocalRowsRequest, 8));
};


/**
 * @param {?proto.XdbGetLocalRowsRequest|undefined} value
 * @return {!proto.ParentAppRequest} returns this
*/
proto.ParentAppRequest.prototype.setXdbgetlocalrows = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.ParentAppRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ParentAppRequest} returns this
 */
proto.ParentAppRequest.prototype.clearXdbgetlocalrows = function() {
  return this.setXdbgetlocalrows(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ParentAppRequest.prototype.hasXdbgetlocalrows = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RuntimeHistogramsRequest runtimeHistograms = 9;
 * @return {?proto.RuntimeHistogramsRequest}
 */
proto.ParentAppRequest.prototype.getRuntimehistograms = function() {
  return /** @type{?proto.RuntimeHistogramsRequest} */ (
    jspb.Message.getWrapperField(this, proto.RuntimeHistogramsRequest, 9));
};


/**
 * @param {?proto.RuntimeHistogramsRequest|undefined} value
 * @return {!proto.ParentAppRequest} returns this
*/
proto.ParentAppRequest.prototype.setRuntimehistograms = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.ParentAppRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ParentAppRequest} returns this
 */
proto.ParentAppRequest.prototype.clearRuntimehistograms = function() {
  return this.setRuntimehistograms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ParentAppRequest.prototype.hasRuntimehistograms = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ProtoParentRequest.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.ProtoParentRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  APP: 2
};

/**
 * @return {proto.ProtoParentRequest.PayloadCase}
 */
proto.ProtoParentRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.ProtoParentRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ProtoParentRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoParentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoParentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoParentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoParentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    func: jspb.Message.getFieldWithDefault(msg, 1, 0),
    app: (f = msg.getApp()) && proto.ParentAppRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoParentRequest}
 */
proto.ProtoParentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoParentRequest;
  return proto.ProtoParentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoParentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoParentRequest}
 */
proto.ProtoParentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ProtoParentFunc} */ (reader.readEnum());
      msg.setFunc(value);
      break;
    case 2:
      var value = new proto.ParentAppRequest;
      reader.readMessage(value,proto.ParentAppRequest.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoParentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoParentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoParentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoParentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFunc();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ParentAppRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoParentFunc func = 1;
 * @return {!proto.ProtoParentFunc}
 */
proto.ProtoParentRequest.prototype.getFunc = function() {
  return /** @type {!proto.ProtoParentFunc} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ProtoParentFunc} value
 * @return {!proto.ProtoParentRequest} returns this
 */
proto.ProtoParentRequest.prototype.setFunc = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ParentAppRequest app = 2;
 * @return {?proto.ParentAppRequest}
 */
proto.ProtoParentRequest.prototype.getApp = function() {
  return /** @type{?proto.ParentAppRequest} */ (
    jspb.Message.getWrapperField(this, proto.ParentAppRequest, 2));
};


/**
 * @param {?proto.ParentAppRequest|undefined} value
 * @return {!proto.ProtoParentRequest} returns this
*/
proto.ProtoParentRequest.prototype.setApp = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ProtoParentRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoParentRequest} returns this
 */
proto.ProtoParentRequest.prototype.clearApp = function() {
  return this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoParentRequest.prototype.hasApp = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ParentGetOutputBufferResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentGetOutputBufferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentGetOutputBufferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentGetOutputBufferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentGetOutputBufferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bufsList: jspb.Message.toObjectList(msg.getBufsList(),
    proto.ParentGetOutputBufferResponse.Buffer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentGetOutputBufferResponse}
 */
proto.ParentGetOutputBufferResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentGetOutputBufferResponse;
  return proto.ParentGetOutputBufferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentGetOutputBufferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentGetOutputBufferResponse}
 */
proto.ParentGetOutputBufferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ParentGetOutputBufferResponse.Buffer;
      reader.readMessage(value,proto.ParentGetOutputBufferResponse.Buffer.deserializeBinaryFromReader);
      msg.addBufs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentGetOutputBufferResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentGetOutputBufferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentGetOutputBufferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentGetOutputBufferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBufsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ParentGetOutputBufferResponse.Buffer.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParentGetOutputBufferResponse.Buffer.prototype.toObject = function(opt_includeInstance) {
  return proto.ParentGetOutputBufferResponse.Buffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParentGetOutputBufferResponse.Buffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentGetOutputBufferResponse.Buffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParentGetOutputBufferResponse.Buffer}
 */
proto.ParentGetOutputBufferResponse.Buffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParentGetOutputBufferResponse.Buffer;
  return proto.ParentGetOutputBufferResponse.Buffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParentGetOutputBufferResponse.Buffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParentGetOutputBufferResponse.Buffer}
 */
proto.ParentGetOutputBufferResponse.Buffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParentGetOutputBufferResponse.Buffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParentGetOutputBufferResponse.Buffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParentGetOutputBufferResponse.Buffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParentGetOutputBufferResponse.Buffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.ParentGetOutputBufferResponse.Buffer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ParentGetOutputBufferResponse.Buffer} returns this
 */
proto.ParentGetOutputBufferResponse.Buffer.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Buffer bufs = 1;
 * @return {!Array<!proto.ParentGetOutputBufferResponse.Buffer>}
 */
proto.ParentGetOutputBufferResponse.prototype.getBufsList = function() {
  return /** @type{!Array<!proto.ParentGetOutputBufferResponse.Buffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ParentGetOutputBufferResponse.Buffer, 1));
};


/**
 * @param {!Array<!proto.ParentGetOutputBufferResponse.Buffer>} value
 * @return {!proto.ParentGetOutputBufferResponse} returns this
*/
proto.ParentGetOutputBufferResponse.prototype.setBufsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ParentGetOutputBufferResponse.Buffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ParentGetOutputBufferResponse.Buffer}
 */
proto.ParentGetOutputBufferResponse.prototype.addBufs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ParentGetOutputBufferResponse.Buffer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ParentGetOutputBufferResponse} returns this
 */
proto.ParentGetOutputBufferResponse.prototype.clearBufsList = function() {
  return this.setBufsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ProtoParentChildResponse.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.ProtoParentChildResponse.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  OUTPUTBUFFERS: 1,
  GROUPID: 2,
  PCBUF: 3,
  XDBGETMETA: 4,
  XDBGETLOCALROWS: 5,
  NUM_ROWS_FAILED_TOTAL: 6,
  HISTOGRAMS: 7
};

/**
 * @return {proto.ProtoParentChildResponse.PayloadCase}
 */
proto.ProtoParentChildResponse.prototype.getPayloadCase = function() {
  return /** @type {proto.ProtoParentChildResponse.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.ProtoParentChildResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoParentChildResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoParentChildResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoParentChildResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoParentChildResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputbuffers: (f = msg.getOutputbuffers()) && proto.ParentGetOutputBufferResponse.toObject(includeInstance, f),
    groupid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pcbuf: (f = msg.getPcbuf()) && proto.ParentChildBuf.toObject(includeInstance, f),
    xdbgetmeta: (f = msg.getXdbgetmeta()) && proto.XdbGetMetaResponse.toObject(includeInstance, f),
    xdbgetlocalrows: (f = msg.getXdbgetlocalrows()) && proto.XdbGetLocalRowsResponse.toObject(includeInstance, f),
    numRowsFailedTotal: jspb.Message.getFieldWithDefault(msg, 6, 0),
    histograms: (f = msg.getHistograms()) && proto.RuntimeHistogramsResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoParentChildResponse}
 */
proto.ProtoParentChildResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoParentChildResponse;
  return proto.ProtoParentChildResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoParentChildResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoParentChildResponse}
 */
proto.ProtoParentChildResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ParentGetOutputBufferResponse;
      reader.readMessage(value,proto.ParentGetOutputBufferResponse.deserializeBinaryFromReader);
      msg.setOutputbuffers(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupid(value);
      break;
    case 3:
      var value = new proto.ParentChildBuf;
      reader.readMessage(value,proto.ParentChildBuf.deserializeBinaryFromReader);
      msg.setPcbuf(value);
      break;
    case 4:
      var value = new proto.XdbGetMetaResponse;
      reader.readMessage(value,proto.XdbGetMetaResponse.deserializeBinaryFromReader);
      msg.setXdbgetmeta(value);
      break;
    case 5:
      var value = new proto.XdbGetLocalRowsResponse;
      reader.readMessage(value,proto.XdbGetLocalRowsResponse.deserializeBinaryFromReader);
      msg.setXdbgetlocalrows(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumRowsFailedTotal(value);
      break;
    case 7:
      var value = new proto.RuntimeHistogramsResponse;
      reader.readMessage(value,proto.RuntimeHistogramsResponse.deserializeBinaryFromReader);
      msg.setHistograms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoParentChildResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoParentChildResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoParentChildResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoParentChildResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputbuffers();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ParentGetOutputBufferResponse.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPcbuf();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ParentChildBuf.serializeBinaryToWriter
    );
  }
  f = message.getXdbgetmeta();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.XdbGetMetaResponse.serializeBinaryToWriter
    );
  }
  f = message.getXdbgetlocalrows();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.XdbGetLocalRowsResponse.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getHistograms();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.RuntimeHistogramsResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ParentGetOutputBufferResponse outputBuffers = 1;
 * @return {?proto.ParentGetOutputBufferResponse}
 */
proto.ProtoParentChildResponse.prototype.getOutputbuffers = function() {
  return /** @type{?proto.ParentGetOutputBufferResponse} */ (
    jspb.Message.getWrapperField(this, proto.ParentGetOutputBufferResponse, 1));
};


/**
 * @param {?proto.ParentGetOutputBufferResponse|undefined} value
 * @return {!proto.ProtoParentChildResponse} returns this
*/
proto.ProtoParentChildResponse.prototype.setOutputbuffers = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoParentChildResponse} returns this
 */
proto.ProtoParentChildResponse.prototype.clearOutputbuffers = function() {
  return this.setOutputbuffers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoParentChildResponse.prototype.hasOutputbuffers = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string groupId = 2;
 * @return {string}
 */
proto.ProtoParentChildResponse.prototype.getGroupid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoParentChildResponse} returns this
 */
proto.ProtoParentChildResponse.prototype.setGroupid = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoParentChildResponse} returns this
 */
proto.ProtoParentChildResponse.prototype.clearGroupid = function() {
  return jspb.Message.setOneofField(this, 2, proto.ProtoParentChildResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoParentChildResponse.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ParentChildBuf pcBuf = 3;
 * @return {?proto.ParentChildBuf}
 */
proto.ProtoParentChildResponse.prototype.getPcbuf = function() {
  return /** @type{?proto.ParentChildBuf} */ (
    jspb.Message.getWrapperField(this, proto.ParentChildBuf, 3));
};


/**
 * @param {?proto.ParentChildBuf|undefined} value
 * @return {!proto.ProtoParentChildResponse} returns this
*/
proto.ProtoParentChildResponse.prototype.setPcbuf = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoParentChildResponse} returns this
 */
proto.ProtoParentChildResponse.prototype.clearPcbuf = function() {
  return this.setPcbuf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoParentChildResponse.prototype.hasPcbuf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional XdbGetMetaResponse xdbGetMeta = 4;
 * @return {?proto.XdbGetMetaResponse}
 */
proto.ProtoParentChildResponse.prototype.getXdbgetmeta = function() {
  return /** @type{?proto.XdbGetMetaResponse} */ (
    jspb.Message.getWrapperField(this, proto.XdbGetMetaResponse, 4));
};


/**
 * @param {?proto.XdbGetMetaResponse|undefined} value
 * @return {!proto.ProtoParentChildResponse} returns this
*/
proto.ProtoParentChildResponse.prototype.setXdbgetmeta = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoParentChildResponse} returns this
 */
proto.ProtoParentChildResponse.prototype.clearXdbgetmeta = function() {
  return this.setXdbgetmeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoParentChildResponse.prototype.hasXdbgetmeta = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional XdbGetLocalRowsResponse xdbGetLocalRows = 5;
 * @return {?proto.XdbGetLocalRowsResponse}
 */
proto.ProtoParentChildResponse.prototype.getXdbgetlocalrows = function() {
  return /** @type{?proto.XdbGetLocalRowsResponse} */ (
    jspb.Message.getWrapperField(this, proto.XdbGetLocalRowsResponse, 5));
};


/**
 * @param {?proto.XdbGetLocalRowsResponse|undefined} value
 * @return {!proto.ProtoParentChildResponse} returns this
*/
proto.ProtoParentChildResponse.prototype.setXdbgetlocalrows = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoParentChildResponse} returns this
 */
proto.ProtoParentChildResponse.prototype.clearXdbgetlocalrows = function() {
  return this.setXdbgetlocalrows(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoParentChildResponse.prototype.hasXdbgetlocalrows = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 num_rows_failed_total = 6;
 * @return {number}
 */
proto.ProtoParentChildResponse.prototype.getNumRowsFailedTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoParentChildResponse} returns this
 */
proto.ProtoParentChildResponse.prototype.setNumRowsFailedTotal = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoParentChildResponse} returns this
 */
proto.ProtoParentChildResponse.prototype.clearNumRowsFailedTotal = function() {
  return jspb.Message.setOneofField(this, 6, proto.ProtoParentChildResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoParentChildResponse.prototype.hasNumRowsFailedTotal = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RuntimeHistogramsResponse histograms = 7;
 * @return {?proto.RuntimeHistogramsResponse}
 */
proto.ProtoParentChildResponse.prototype.getHistograms = function() {
  return /** @type{?proto.RuntimeHistogramsResponse} */ (
    jspb.Message.getWrapperField(this, proto.RuntimeHistogramsResponse, 7));
};


/**
 * @param {?proto.RuntimeHistogramsResponse|undefined} value
 * @return {!proto.ProtoParentChildResponse} returns this
*/
proto.ProtoParentChildResponse.prototype.setHistograms = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.ProtoParentChildResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoParentChildResponse} returns this
 */
proto.ProtoParentChildResponse.prototype.clearHistograms = function() {
  return this.setHistograms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoParentChildResponse.prototype.hasHistograms = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * @enum {number}
 */
proto.ProtoChildFunc = {
  CHILDFUNCSHUTDOWN: 0,
  CHILDFUNCUDFEVAL: 1,
  CHILDFUNCAPPSTART: 2,
  CHILDFUNCUDFADD: 3,
  CHILDFUNCUDFUPDATE: 4,
  CHILDFUNCUDFLISTFUNCTIONS: 5,
  CHILDFUNCRECVBUFFERFROMSRC: 6,
  CHILDFUNCUDFINIT: 7
};

/**
 * @enum {number}
 */
proto.ProtoParentFunc = {
  PARENTFUNCCONNECT: 0,
  PARENTFUNCAPPDONE: 1,
  PARENTFUNCAPPGETGROUPID: 2,
  PARENTFUNCAPPREPORTNUMFILES: 3,
  PARENTFUNCAPPLOADBUFFER: 4,
  PARENTFUNCAPPGETOUTPUTBUFFER: 5,
  PARENTFUNCAPPREPORTFILEERROR: 6,
  PARENTFUNCXPUSENDLISTTODSTS: 7,
  PARENTFUNCXDBGETMETA: 8,
  PARENTFUNCXDBGETLOCALROWS: 9,
  PARENTFUNCGETRUNTIMEHISTOGRAMS: 10
};

goog.object.extend(exports, proto);
